# User Story: Deploy Grafana OSS on AKS with Azure Monitor and Application Insights Integration via Helm

## Story Title
As a DevOps Engineer, I want to deploy Grafana OSS on AKS using Helm with Azure Monitor and Application Insights integration so that we can visualize our Azure metrics and application data in an open-source dashboard solution.

## User Story Description
We currently have a Grafana deployment in AKS integrated with Azure Monitor and Application Insights using Helm. We want to replicate this setup using Grafana OSS (Open Source Software) to maintain open-source compliance while keeping all the existing Azure integrations functional.

## Acceptance Criteria

1. **Grafana OSS Deployment**:
   - Grafana OSS is successfully deployed on AKS via Helm
   - Deployment uses the official Grafana Helm chart for OSS version
   - All necessary Kubernetes resources (deployments, services, ingress, etc.) are created

2. **Azure Monitor Integration**:
   - Grafana is configured to connect to Azure Monitor data source
   - Service principal or managed identity is properly configured for authentication
   - All existing Azure Monitor dashboards and queries work as before

3. **Application Insights Integration**:
   - Application Insights data source is properly configured in Grafana
   - API keys or other authentication methods are correctly set up
   - Existing Application Insights dashboards and queries function correctly

4. **Persistence**:
   - Dashboard configurations and user settings are persisted
   - Proper storage configuration is implemented (PVC or Azure Disk)

5. **Security**:
   - Network policies are in place to restrict access
   - Authentication is properly configured (Azure AD or other)
   - Secrets are managed securely (Key Vault or Kubernetes secrets)

6. **Monitoring**:
   - Grafana instance itself is monitored
   - Alerts are set up for Grafana availability

## Technical Implementation Notes

### Helm Configuration
```yaml
# values.yaml for Grafana OSS
grafana:
  image:
    repository: grafana/grafana-oss
    tag: latest
  persistence:
    enabled: true
    storageClassName: azurefile
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: AzureMonitor
        type: grafana-azure-monitor-datasource
        access: proxy
        orgId: 1
        url: /api/datasources/proxy/1
        jsonData:
          subscriptionId: ${AZURE_SUBSCRIPTION_ID}
          cloudName: azuremonitor
          azureAuthType: msi
        secureJsonData:
          clientSecret: ${AZURE_CLIENT_SECRET}
      - name: AppInsights
        type: application-insights
        access: proxy
        orgId: 1
        url: /api/datasources/proxy/2
        jsonData:
          appInsightsAppId: ${APP_INSIGHTS_APP_ID}
          appInsightsApiKey: ${APP_INSIGHTS_API_KEY}
          azureLogAnalyticsSameAs: true
```

### Deployment Steps
1. Add Grafana Helm repo:
   ```bash
   helm repo add grafana https://grafana.github.io/helm-charts
   helm repo update
   ```

2. Install Grafana OSS:
   ```bash
   helm install grafana-oss grafana/grafana -f values.yaml
   ```

3. Configure ingress/network access as needed

4. Set up authentication (Azure AD OAuth recommended)

## Dependencies
- AKS cluster with proper permissions
- Azure Monitor and Application Insights resources
- Helm installed and configured
- kubectl configured to access the AKS cluster

## Out of Scope
- Migration of existing dashboards (to be handled in a separate story)
- Custom plugin installation (can be added later if needed)

## Value Proposition
This implementation will provide:
- Open-source compliant monitoring solution
- Seamless integration with existing Azure monitoring infrastructure
- Maintained visibility into application performance and infrastructure metrics
- Flexibility to customize and extend as needed
