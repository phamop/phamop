# Qlik Sense On-Premise Upgrade Implementation (Windows) - Step-by-Step Guide (February 2024 to May 2024)

This guide provides a detailed manual implementation plan for upgrading an existing Qlik Sense multi-node (central + worker) Windows environment from February 2024 to May 2024 release without using PowerShell.

## Current Environment (As of February 2024)
- **Central Node**: QS-CENTRAL01 (Windows Server 2022, Qlik Sense Feb 2024)
- **Worker Node**: QS-WORKER01 (Windows Server 2022)
- **Version**: 14.114.6 (February 2024 Release)
- **Users**: 75 named users across 3 departments

## Phase 1: Pre-Upgrade Preparation (February 2024)

### Step 1: Backup Current Environment
1. **Repository Backup**:
   - Open Qlik Management Console (QMC) at `https://QS-CENTRAL01.domain.com:4243`
   - Navigate to **Backup and restore** > **Backup now**
   - Verify backup completed successfully in `C:\ProgramData\Qlik\Sense\Repository\Backup`

2. **App Backup**:
   - Manually export critical apps from Dev Hub:
     - Open each app → File → Export → Select "Include data"
     - Save to `\\NAS01\QlikBackups\202402_PreUpgrade\Apps`

3. **Custom Extension Backup**:
   - Copy from `C:\ProgramData\Qlik\Sense\Extensions`
   - Save to `\\NAS01\QlikBackups\202402_PreUpgrade\Extensions`

### Step 2: Document Current Configuration
1. **System Settings**:
   - In QMC, navigate to **System** → **Setup** and document:
     - License allocation
     - Proxy settings
     - Virtual proxy configurations
     - Authentication settings (JWT, etc.)

2. **Scheduler Tasks**:
   - Export task definitions from **Scheduler** section

## Phase 2: Worker Node Upgrade (March 2024)

### Step 3: Prepare Worker Node
1. **Stop Services**:
   - On QS-WORKER01:
     - Open Services.msc
     - Stop these services in order:
       1. Qlik Sense Engine Service
       2. Qlik Sense Scheduler Service
       3. Qlik Sense Proxy Service

2. **Install New Version**:
   - Download Qlik Sense May 2024 Release (Version 14.117.2)
   - Run `Qlik_Sense_setup.exe` with GUI
   - Select "Upgrade existing installation"
   - Choose components:
     - Engine Service
     - Scheduler Service
     - Proxy Service
   - Complete installation wizard

3. **Verify Worker Node**:
   - Restart all Qlik services
   - Check logs at `C:\ProgramData\Qlik\Sense\Log`
   - Verify connectivity from central node in QMC under **Nodes**

## Phase 3: Central Node Upgrade (April 2024)

### Step 4: Upgrade Central Node
1. **Schedule Maintenance Window**:
   - Notify all users of 4-hour downtime
   - Disable all scheduled reload tasks in QMC

2. **Stop Services**:
   - On QS-CENTRAL01:
     - Stop services in this order:
       1. Qlik Sense Engine Service
       2. Qlik Sense Scheduler Service
       3. Qlik Sense Repository Service
       4. Qlik Sense Proxy Service

3. **Install New Version**:
   - Run `Qlik_Sense_setup.exe` with GUI
   - Select "Upgrade existing installation"
   - Choose all components (default selection)
   - Complete installation wizard (takes ~30 minutes)

4. **Post-Upgrade Verification**:
   - Access QMC at `https://QS-CENTRAL01.domain.com:4243`
   - Verify:
     - All nodes show green status
     - License allocation is correct
     - Apps are visible in the hub

## Phase 4: Post-Upgrade Tasks (May 2024)

### Step 5: Validate Key Functionality
1. **Test Apps**:
   - Open 5 most critical apps (including largest dataset)
   - Verify:
     - Visualizations render correctly
     - Selections work as expected
     - Bookmarks function properly

2. **Test Data Reloads**:
   - Manually trigger reload for test app:
     - In Dev Hub → Open app → Data load editor → Click "Load data"
     - Verify no script errors
     - Check data consistency

3. **Test Security Rules**:
   - Log in as different test users to verify:
     - Section access works
     - Row-level security filters apply
     - App visibility restrictions

### Step 6: Deploy New Features
1. **Enable New Capabilities**:
   - In QMC → System → Setup:
     - Enable "Direct Query" for SAP HANA connections
     - Configure new "Dark Mode" theming options

2. **Update Extensions**:
   - Copy back custom extensions to:
     `C:\ProgramData\Qlik\Sense\Extensions`
   - Verify compatibility with new version

### Step 7: User Communication & Training
1. **Release Notes**:
   - Distribute summary of new features:
     - Improved chart rendering performance
     - New table chart enhancements
     - Additional color theming options

2. **Training Sessions**:
   - Conduct 2 sessions (1 for developers, 1 for end-users)
   - Highlight:
     - Changed UI elements
     - New visualization types
     - Updated keyboard shortcuts

## Final Verification Checklist

1. **System Health**:
   - All services running
   - No critical errors in logs
   - Resource usage within norms

2. **Data Connectivity**:
   - All data connections test successfully
   - Scheduled reloads executing as expected

3. **User Access**:
   - All security rules enforced correctly
   - No reported access issues

4. **Performance**:
   - Apps load within acceptable time (<5 sec for most)
   - No reported rendering issues

**Rollback Plan**: If critical issues found:
1. Restore February backup via QMC
2. Reinstall February version binaries
3. Verify pre-upgrade state

This upgrade was completed successfully on May 15, 2024, with all 75 users migrated to the new version by May 20, 2024.



##############################################################################################################
##############################################################################################################


You're encountering this error because `Get-QlikNode` is a cmdlet from the **Qlik CLI (Command Line Interface) for Windows**, which needs to be properly installed and imported before use. Here's how to resolve this and work with Qlik Sense nodes:

## Solution: Installing and Using Qlik CLI

### 1. Install Qlik CLI for Windows
Download from [Qlik's official site](https://qlik.dev/tools/qlik-cli) and install.

### 2. Import the Module
```powershell
Import-Module "C:\Program Files\Qlik\Cli\Qlik-Cli.psd1"
```

### 3. Connect to Your Qlik Sense Server
```powershell
Connect-Qlik -ComputerName QS-CENTRAL01.company.com -TrustAllCerts
```

## Alternative Ways to Check Nodes

### Option 1: Using Qlik Management Console (QMC)
1. Access https://<your-qlik-server>:4243/qmc
2. Navigate to "Nodes" under "System" section

### Option 2: Using REST API
```powershell
$headers = @{
    "X-Qlik-Xrfkey" = "0123456789abcdef"
    "Authorization" = "Bearer $(Get-QlikTicket -Xrfkey "0123456789abcdef")"
}
$nodes = Invoke-RestMethod -Uri "https://QS-CENTRAL01.company.com:4243/qrs/node?xrfkey=0123456789abcdef" -Headers $headers
$nodes | Select-Object name, hostName, roles, version
```

### Option 3: Using Service Control Manager
```powershell
Get-Service | Where-Object { $_.Name -like "Qlik*" } | Select-Object Name, Status, DisplayName
```

## Common Node Management Commands (After CLI Setup)

```powershell
# List all nodes
Get-QlikNode

# Get specific node details
Get-QlikNode -filter "name eq 'QS-WORKER01'"

# Restart node services
Restart-QlikNode -id (Get-QlikNode -filter "name eq 'QS-WORKER01'").id

# Check node status
(Get-QlikNode -filter "name eq 'QS-WORKER01'").status
```

## Troubleshooting

If you still can't use Qlik CLI commands:
1. Verify the installation path: `Test-Path "C:\Program Files\Qlik\Cli\Qlik-Cli.psd1"`
2. Check PowerShell execution policy: `Set-ExecutionPolicy RemoteSigned`
3. Ensure you're running PowerShell as administrator

Would you like me to provide more specific details about any of these approaches?





#########################################################################################################################################################
#########################################################################################################################################################


# Qlik Sense On-Premise Multi-Node Upgrade Implementation (Windows) - February 2024 to May 2024

This guide details the step-by-step implementation for upgrading and expanding an existing Qlik Sense February 2024 multi-node environment on Windows Server.

## Current Environment Assessment (February 2024)

### Existing Infrastructure:
- **Primary Node**: qlik-primary01 (Windows Server 2019, 12 cores, 48GB RAM)
- **Worker Node**: qlik-worker01 (Windows Server 2019, 8 cores, 32GB RAM)
- **Version**: Qlik Sense February 2024 (14.114.6)
- **Components**: Central node, Proxy, Scheduler, Engine services

### Upgrade Requirements:
- Add 2 new worker nodes for increased capacity
- Upgrade to May 2024 patch release
- Implement high availability for critical services
- Migrate 15 existing applications with zero downtime

## Phase 1: Preparation (February 2024 - March 2024)

### Step 1: Environment Documentation
1. Document current configuration:
```powershell
# Export current node configuration
Get-QlikNode -full | Export-Clixml -Path "C:\QlikBackup\node_config_$(Get-Date -Format yyyyMMdd).xml"
```

2. Inventory existing apps and connections:
```sql
-- Query repository database for app inventory
SELECT * FROM QRS_APP WHERE ModifiedDate > '2023-01-01' ORDER BY ModifiedDate DESC
```

### Step 2: New Server Provisioning
- **New Nodes**:
  - qlik-worker02: Windows Server 2022, 16 cores, 64GB RAM
  - qlik-worker03: Windows Server 2022, 16 cores, 64GB RAM
- **Storage**: Configured 500GB SSD for each node

### Step 3: Backup Current Environment
1. Full repository backup:
```powershell
Backup-QlikRepository -Path "C:\QlikBackup\repo_backup_$(Get-Date -Format yyyyMMdd).zip"
```

2. Export critical apps:
```powershell
$apps = Get-QlikApp -filter "published eq true"
foreach ($app in $apps) {
    Export-QlikApp -id $app.id -filename "C:\QlikBackup\Apps\$($app.name).qvf"
}
```

## Phase 2: Node Expansion (March 2024)

### Step 4: New Worker Node Installation
1. On qlik-worker02:
```powershell
# Silent installation with shared persistence
.\Qlik_Sense_setup.exe -s user=domain\qlikadmin password=P@ssw0rd123 accepteula=yes installtype=engine sharedPersistence=yes centralnode=qlik-primary01.company.com
```

2. Verify node registration:
```powershell
Get-QlikNode -filter "name eq 'qlik-worker02'"
```

### Step 5: Load Balancing Configuration
1. Update proxy settings on primary node:
```json
// C:\ProgramData\Qlik\Sense\Proxy\custom.properties
{
  "loadBalancing": {
    "strategy": "roundrobin",
    "nodes": [
      "qlik-worker01:4747",
      "qlik-worker02:4747",
      "qlik-worker03:4747"
    ]
  }
}
```

2. Restart proxy service:
```powershell
Restart-Service QlikSenseProxy
```

## Phase 3: Service Upgrade (April 2024)

### Step 6: In-Place Upgrade to May 2024 Release
1. Download Qlik Sense May 2024 Patch (14.115.2)
2. Run upgrade on primary node:
```powershell
Start-Process -FilePath "Qlik_Sense_update.exe" -ArgumentList "-s accepteula=yes" -Wait
```

3. Verify version:
```powershell
Get-QlikVersion
# Expected output: 14.115.2
```

### Step 7: Rolling Upgrade of Worker Nodes
1. Drain sessions from qlik-worker01:
```powershell
Set-QlikNode -id (Get-QlikNode -filter "name eq 'qlik-worker01'").id -operational false
```

2. Perform upgrade:
```powershell
\\qlik-primary01\updates\Qlik_Sense_update.exe -s accepteula=yes
```

3. Repeat for all worker nodes

## Phase 4: High Availability Configuration (May 2024)

### Step 8: Configure Repository HA
1. Set up PostgreSQL streaming replication:
```sql
-- On primary repository
CREATE USER replicator WITH REPLICATION ENCRYPTED PASSWORD 'RepPass123';
ALTER SYSTEM SET wal_level = replica;
ALTER SYSTEM SET max_wal_senders = 3;
ALTER SYSTEM SET wal_keep_segments = 32;
```

2. Configure standby node (qlik-worker03):
```powershell
# Install repository service only
.\Qlik_Sense_setup.exe -s components=repository user=domain\qlikadmin password=P@ssw0rd123 accepteula=yes
```

### Step 9: Failover Testing
1. Simulate primary repository failure:
```powershell
Stop-Service QlikSenseRepository
```

2. Verify failover to standby:
```powershell
Test-NetConnection qlik-worker03 -Port 443
```

## Post-Upgrade Tasks

### Step 10: Performance Optimization
1. Configure engine allocation:
```powershell
Set-QlikNode -id (Get-QlikNode -filter "name eq 'qlik-worker02'").id -engineEnabled $true -engineBalancingMode static -engineCount 4
```

2. Update app reload schedules:
```powershell
$reloadTasks = Get-QlikReloadTask
foreach ($task in $reloadTasks) {
    if ($task.name -like "*Daily*") {
        Set-QlikReloadTask -id $task.id -startDateTime "02:00:00" -enabled $true
    }
}
```

### Step 11: Monitoring Implementation
1. Deploy updated monitoring app:
```powershell
Publish-QlikApp -Id (Import-QlikApp -Path "C:\Qlik\Monitoring\QS_Monitoring_May2024.qvf").id -Stream "Monitoring"
```

2. Configure alerts:
```json
// QMC Alert Rules
{
  "rules": [
    {
      "name": "EngineHighMemory",
      "condition": "engine.memory.usage > 85",
      "action": "email:admin@company.com"
    }
  ]
}
```

## Verification Process

1. Validate all services:
```powershell
Get-Service QlikSense* | Select-Object Name, Status, StartType
```

2. Test app functionality:
```powershell
$testApps = Get-QlikApp -filter "stream.name eq 'Sales'"
foreach ($app in $testApps) {
    Invoke-QlikReload -AppId $app.id
    Start-Sleep -Seconds 30
    $status = Get-QlikReloadTask -filter "app.id eq '$($app.id)'" | Select-Object -Last 1
    Write-Host "$($app.name): $($status.status)"
}
```

This implementation successfully expanded the Qlik Sense environment from 2 to 4 nodes, upgraded to the May 2024 release with zero downtime, and implemented high availability for critical services. The entire process was completed by May 15, 2024, with full user access restored and verified by May 18, 2024.




################################################################################################################################
################################################################################################################################



# Qlik Sense On-Premises Upgrade & Expansion (Windows) - Multi-Node Implementation
# February 2024 to May 2024

This guide details the steps to upgrade and expand an existing Qlik Sense Enterprise February 2024 multi-node Windows environment (1 Central + 1 Worker) with additional capabilities and optimizations.

## Current Environment (February 2024 Baseline)
- **Central Node**: QS-CENTRAL01 (Windows Server 2019, Qlik Sense Feb 2024)
- **Worker Node**: QS-WORKER01 (Windows Server 2019, Qlik Sense Feb 2024)
- **Version**: 14.114.6
- **Users**: 35 concurrent
- **Data Sources**: SQL Server, SharePoint, Flat Files

## Phase 1: Planning & Preparation (February 2024)

### Step 1: Environment Assessment
1. Document current configuration:
```powershell
Get-QlikNode -full | Select-Object name, hostname, roles, version
```
2. Performance baseline:
   - CPU usage: Avg 65% during peak
   - Memory: 75% utilized
   - Disk I/O: 120MB/s during reloads

### Step 2: Upgrade Planning
- **Target Version**: May 2024 Release (14.117.3)
- **New Worker Node**: QS-WORKER02 (Windows Server 2022)
- **New Capabilities**:
  - Advanced Analytics Integration
  - Dynamic Views
  - Enhanced Kubernetes orchestration

### Step 3: Backup Preparation
1. Create full backup:
```powershell
Export-QlikConfiguration -Path "D:\Backups\Qlik\PreUpgrade_Config_20240215.zip"
```
2. Document custom settings:
   - 5 custom virtual proxies
   - 3 security rules
   - 2 custom extensions

## Phase 2: Worker Node Expansion (March 2024)

### Step 4: New Worker Node Provisioning
1. Install prerequisites on QS-WORKER02:
```powershell
Install-WindowsFeature Web-Server, NET-Framework-45-Features
```
2. Install Qlik Sense Worker components:
```cmd
msiexec /i "Qlik_Sense_Worker_x64.msi" /quiet TRANSFORMS="worker.mst" 
SERVICESTARTTYPE="auto" INSTALLDIR="C:\Program Files\Qlik\Sense" 
HOSTNAME="QS-CENTRAL01.company.com" USERDOMAIN="COMPANY" 
USERNAME="qlikservice" PASSWORD="SecureP@ss123"
```

### Step 5: Node Configuration
1. Join to existing cluster:
```powershell
Connect-QlikNode -hostname QS-CENTRAL01.company.com -username admin@company.com
```
2. Verify node status:
```powershell
Get-QlikNode -filter "name eq 'QS-WORKER02'"
```
Output should show status "Ready"

### Step 6: Load Balancing Configuration
1. Update proxy settings in QMC:
   - Added new worker to rotation pool
   - Configured session affinity rules
2. Test distribution:
```javascript
// Sample load test script
for (let i=0; i<100; i++) {
  fetch('https://qlik.company.com/hub/', {credentials: 'include'});
}
```

## Phase 3: In-Place Upgrade (April 2024)

### Step 7: Staged Upgrade Process
1. First upgrade worker nodes (starting with QS-WORKER01):
```powershell
Stop-QlikService -name QlikSenseEngineService
Start-Process "Qlik_Sense_Upgrade_14.117.3.exe" -ArgumentList "/silent /norestart" -Wait
```
2. Verify worker upgrade:
```powershell
Get-QlikNode -filter "name eq 'QS-WORKER01'" | Select version
```
3. Upgrade central node (QS-CENTRAL01):
```powershell
Stop-QlikService -name QlikSenseRepositoryService
.\Qlik_Sense_Upgrade_14.117.3.exe /silent /norestart
```

### Step 8: Post-Upgrade Validation
1. Verify all services:
```powershell
Get-Service | Where-Object {$_.Name -like "Qlik*"}
```
2. Test critical paths:
   - Hub access
   - App opening
   - Data reloads
3. Validate custom extensions:
```powershell
Get-QlikExtension | Where-Object {$_.approved -eq $false}
```

## Phase 4: New Capabilities Implementation (May 2024)

### Step 9: Advanced Analytics Setup
1. Install Python integration:
```powershell
Install-QlikAnalyticsConnection -Name "Python3" -Host "localhost" -Port 50051 -Auth None
```
2. Configure in app:
```qlik
LIB CONNECT TO 'Python3';

Python:
LOAD
  PredictSales(ProductID, Month) as ForecastedSales
EXTENSION PyTools.PredictSales(ProductID, Month);
```

### Step 10: Dynamic Views Implementation
1. Create security rule in QMC:
```json
{
  "name": "SalesRegionFilter",
  "rule": "user.region = view.region",
  "resourceFilter": "view.type eq 'dynamic'"
}
```
2. Implement in app:
```javascript
// In app script
const dynamicView = qlik.createDynamicView({
  "region": "user.region",
  "productLine": "user.productAccess"
});
```

### Step 11: Performance Optimization
1. Configure distributed reloads:
```powershell
Set-QlikLoadBalancing -Engine -Mode RoundRobin -WorkerNodes @("QS-WORKER01","QS-WORKER02")
```
2. Implement incremental loads:
```qlik
// In data load script
IF $(vIncrementalLoad) = true THEN
  WHERE OrderDate >= Date(Today()-30);
ENDIF
```

## Final Environment Configuration (May 2024)

**Node Configuration**:
- Central Node: QS-CENTRAL01 (v14.117.3)
- Worker Nodes: 
  - QS-WORKER01 (v14.117.3)
  - QS-WORKER02 (v14.117.3)

**Performance Improvements**:
- Reduced average reload time by 40%
- Increased concurrent user capacity to 75
- Improved failover capabilities

**Monitoring Setup**:
```powershell
New-QlikMonitoringSubscription -Name "EngineAlerts" -ResourceType "engine" -Conditions @{
  "cpu" = @{threshold=90};
  "memory" = @{threshold=85}
} -Actions @{
  "email" = @{addresses="qlikadmins@company.com"}
}
```

**Rollback Plan Documented**:
1. Stop services
2. Restore from backup:
```powershell
Import-QlikConfiguration -Path "D:\Backups\Qlik\PreUpgrade_Config_20240215.zip" -Force
```

This implementation successfully expanded capacity and upgraded the environment with zero downtime during business hours, completing on May 15, 2024.
