= Technical Non-Functional Requirements (NFRs) =
This section defines the technical non-functional requirements for the Observability Platform, implemented using **Kustomize** and **Helm**.

{| class="wikitable" style="width:100%; text-align:left;"
! Requirement Category !! Target / Policy !! Technical Implementation
|-
| Availability || 99.9% uptime for ingestion and Grafana UI || 
* AKS cluster deployed across Availability Zones with system + workload node pools  
* PodDisruptionBudgets for Grafana, OTel Collector  
* PodAntiAffinity rules for HA workloads  
* Resource requests/limits defined in Helm values  
* HPA enabled for Grafana + OTel Collector  
|-
| Security || Enforce identity, access, and encryption standards || 
* AKS deployed in dedicated VNet  
* Calico `NetworkPolicy` for pod-to-pod isolation  
* Restrict ingress to corporate IPs  
* Azure AD integrated for AKS + Grafana (OAuth2 SSO)  
* Kubernetes RBAC + Azure AD groups for Grafana permissions  
* TLS 1.3 enforced at ingress and mesh/service traffic  
* Blob storage encrypted with SSE/CMK  
|-
| Performance || <5s query latency for hot data (<30d) || 
* Dedicated memory-optimized node pool for Prometheus  
* Prometheus: `retention.time=30d`, `min-block-duration=2h`  
* Loki: `chunk_target_size=1MB`, `retention_period=30d`  
* OTel Collector batching: `batch.timeout=5s`, `send_batch_size=512`  
|-
| Retention || 30 days hot storage; 90 days total with cold archive || 
* Prometheus Helm: `server.retention=30d`  
* Loki Helm: `chunk_store_config.max_look_back_period=30d`  
* Jaeger: backend TTL=30d, traces exported to Blob  
* Azure Blob Lifecycle Policy → archive after 30d, expire after 90d  
|-
| Operability || Self-monitoring, proactive alerting, centralized logs (GitOps future option) || 
* Prometheus scrapes observability components (`/metrics`)  
* Alertmanager routes alerts to Teams/Slack  
* Loki aggregates cluster + workload logs  
* GitOps (ArgoCD/FluxCD) planned for future declarative rollouts  
|-
| Cost || Optimize spend with autoscaling + storage tiering || 
* Spot Node Pools for non-critical workloads (e.g., Loki compactor)  
* Cluster Autoscaler (min/max node pools)  
* Azure Blob tiered storage: Hot → Cool → Archive  
* Azure Budgets + Cost Alerts enabled at RG level  
|-
| Scalability || Autoscale workloads and clusters; federation planned || 
* HPA for Grafana, OTel Collector (CPU/mem/custom metrics)  
* VPA for Prometheus + Loki StatefulSets (recommendation mode)  
* Cluster Autoscaler for AKS  
* Future: Multi-cluster federation via Azure Arc  
|-
| Compliance & Auditability || Meet CIS benchmarks; enforce policies; retain audit logs || 
* CIS Kubernetes + AKS baseline policies applied  
* AKS control plane + Key Vault + AAD logs → centralized in Loki  
* Azure Blob immutable WORM policies for audit logs  
* OPA Gatekeeper + Azure Policy enforce namespace/workload compliance  
* Azure AD Conditional Access + PIM for JIT admin access  
|}
