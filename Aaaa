= Non-Functional Requirements (NFRs) =
This section outlines the non-functional requirements for the Observability Platform, implemented using **Kustomize** and **Helm**.

== Summary Table ==
{| class="wikitable" style="width:100%; text-align:left;"
! Requirement Category !! Key Target / Policy
|-
| Availability || 99.9% uptime for ingestion + Grafana UI across AZs
|-
| Security || Azure AD SSO, RBAC, TLS everywhere, SSE/CMK at rest
|-
| Performance || < 5s query response on dashboards with <30 days data
|-
| Retention || 30 days hot storage; 90 days total with Azure Blob archive
|-
| Operability || Self-monitoring, proactive alerting, centralized logging (GitOps adoption considered in future)
|-
| Cost || Spot node pools, autoscaling, tiered Blob storage, Azure Budgets
|-
| Scalability || HPA, VPA, Cluster Autoscaler, multi-cluster federation (future)
|-
| Compliance & Auditability || CIS benchmarks, immutable audit logs, OPA/Azure Policy enforcement
|}

== Availability ==
* **Target:** 99.9% uptime for data ingestion and Grafana UI.  
* **Implementation:**
** AKS cluster with multiple nodes across Availability Zones.  
** Pod Disruption Budgets and pod anti-affinity rules for critical components (Grafana, OTel Collector).  
** Configured resource requests/limits and horizontal pod autoscaling.  

== Security ==
* **Implementation:**
** '''Network Security:''' AKS cluster deployed in a dedicated VNet. Application Security Groups and Network Policies (Calico) restrict pod-to-pod traffic. Grafana ingress limited to corporate network IP ranges.  
** '''Authentication:''' Azure AD integration for AKS access. Grafana configured for Azure AD OAuth SSO.  
** '''Authorization:''' Kubernetes RBAC for service accounts. Grafana dashboard and data source permissions managed via Azure AD groups.  
** '''Encryption:''' TLS for all ingress traffic and service-to-service communication (via service mesh or ingress). Data encrypted at rest in Azure Blob Storage using SSE/CMK.  

== Performance ==
* **Target:** < 5-second query response time for Grafana dashboards on hot data (<30 days).  
* **Implementation:**
** Dedicated node pools for memory-intensive workloads (e.g., Prometheus).  
** Performance tuning for Prometheus (chunk size, retention) and Loki (chunk_target_size, retention).  
** OTel Collector configured for batching and processing optimization.  

== Retention ==
* **Policy:**
** Hot Storage (Cluster): 30 days of data retained within Prometheus/Loki/Jaeger.  
** Cold Storage (Azure Blob): 90 days total retention, with data archived to blob storage after 30 days.  
* **Implementation:** Configured via Helm chart values for each component (e.g., `prometheus.server.retention`, `loki.config.chunk_store_config`).  

== Operability ==
* **Implementation:**
** Monitoring: The stack monitors itself (Prometheus scrapes its own metrics).  
** Alerting: Prometheus alerts routed to Slack/Teams channels for proactive incident management.  
** Logging: Cluster and application logs aggregated in Loki for troubleshooting.  
** GitOps (Future): GitOps workflows using ArgoCD/FluxCD may be adopted later for version-controlled, declarative deployments.  

== Cost ==
* **Management Strategy:**
** Utilize Azure Spot Node Pools for non-critical, scalable workloads.  
** Right-size node pools and implement cluster and pod autoscaling.  
** Tiered storage: Cheaper Blob Storage for long-term retention.  
** Azure Budgets and Cost Alerts configured for the resource group.  

== Scalability ==
* **Implementation:**
** '''Horizontal Pod Autoscaling (HPA):''' Enabled for OTel Collector, Grafana, and Prometheus to scale based on CPU/memory and custom metrics.  
** '''Vertical Pod Autoscaling (VPA):''' Configured for stateful workloads (e.g., Prometheus, Loki) to auto-tune resource requests/limits.  
** '''Cluster Autoscaler:''' Enabled for AKS to add/remove nodes dynamically based on workload demand.  
** '''Multi-Cluster Federation (Future):''' Support planned for cross-cluster observability and scaling across multiple AKS regions using federation or Azure Arc.  

== Compliance & Auditability ==
* **Implementation:**
** '''CIS Benchmark Hardening:''' AKS cluster and node pools configured to meet CIS Kubernetes and Azure security benchmarks.  
** '''Audit Logs:''' AKS control plane logs, Key Vault access logs, and Azure AD sign-in logs integrated into the observability stack.  
** '''Immutable Logs:''' Long-term storage of security and audit logs in Azure Blob with Write-Once-Read-Many (WORM) policies enabled.  
** '''Policy Enforcement:''' OPA Gatekeeper and Azure Policy enforce compliance on resources, namespaces, and deployments.  
** '''Access Reviews:''' Azure AD Conditional Access, periodic RBAC audits, and Just-In-Time (JIT) privileged access via PIM.  
