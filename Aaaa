@startuml
' C4-PlantUML: Container-level diagram for Dev Observability Security Design for Temporary VM-hosted OSS Observability Stack
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Define styles
skinparam rectangle<<Observability>> {
  BackgroundColor #DAE8FC
  FontColor black
}
skinparam rectangle<<AKS>> {
  BackgroundColor #D5E8D4
  FontColor black
}
skinparam rectangle<<Security>> {
  BackgroundColor #E1D5E7
  FontColor black
}

' Observability Components
rectangle "Observability" <<Observability>> {
  Container(otel, "OTel Collector", "Go", "Receives telemetry via OTLP")
}

' AKS Cluster
rectangle "AKS Cluster" <<AKS>> {
  Container(aks_workloads, "Instrumented Workloads", "Containers", "Send telemetry via OTel SDK/sidecars")
}

' Network Security
rectangle "Network Security" <<Security>> {
  System(nsg, "NSG", "Network Security Group", "Controls traffic between AKS and Observability")
}

' Core telemetry flow with NSG
Rel(aks_workloads, otel, "OTLP gRPC 4317/HTTP 4318", "Telemetry data")
Rel(nsg, otel, "Allow inbound", "From AKS CIDR")
Rel(nsg, aks_workloads, "Allow outbound", "To OTel Collector")

' Optional security elements
System(akv, "Azure Key Vault", "Manages TLS certificates")
Rel(akv, otel, "Provision server cert")
Rel(akv, aks_workloads, "Provision client certs")

SHOW_LEGEND()
@enduml
