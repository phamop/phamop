# Tech Spike Plan – Validate Option 3: OTel → Loki Integration via Event Hub

## 1. Objectives

Define the key questions this spike aims to answer:

* Can OpenTelemetry Collector reliably ingest Azure resource logs via Event Hub and push to Loki?
* What is the expected data latency and ingestion performance?
* What SRE overhead (e.g., maintenance, scaling) does this setup imply?
* Are there cost indicators that make this option viable or prohibitive?

## 2. Scope / Constraints

**In Scope:**

* Route logs from 1–2 Azure resources (e.g., App Service, Function App).
* Configure Event Hub → OpenTelemetry Collector → Loki flow.
* Push one trace sample into Jaeger.

**Out of Scope:**

* Full environment rollout or optimization.
* Automation, scaling, or CI/CD integration.
* Security hardening or production monitoring.

## 3. Experiments / Activities

1. Deploy a lightweight OTel Collector in subscription/AKS for testing.
2. Configure Event Hub namespace and set up diagnostics from one Azure resource.
3. Forward logs from Event Hub → OTel → Loki (validate ingestion).
4. Scrape sample metrics via OTel and confirm visibility in Grafana.
5. Send one test trace into Jaeger to validate end-to-end pipeline.
6. Record performance metrics (latency, resource consumption).

## 4. Time-box

Limit the spike to one sprint. The goal is to **learn fast**, not perfect the setup.

## 5. Outputs

Deliver concise, factual results:

* Findings: what worked, what didn’t.
* Evidence: screenshots, metrics, logs, or configuration snippets.
* Estimated cost: Event Hub + Collector resource cost baseline.
* Risks / Unknowns: integration challenges, scaling limits, support gaps.
* Recommendation: proceed, pivot, or drop.

## 6. Outcome

This spike should prove or disprove feasibility of Option 3 and reduce uncertainty in:

* Technical integration (Event Hub → OTel → Loki).
* Cost and operational complexity.
* Performance and maintainability.

---

## 7. Acceptance Criteria

* Logs from Azure resources appear in Loki within **30 seconds (P50)** and **90 seconds (P95)** latency.
* OpenTelemetry Collector shows no dropped records during a 1-hour continuous log test.
* At least one trace is visible in Jaeger.
* Metrics scraped by OTel are visible in Grafana.
* Cost estimation report is completed and approved.

---

## 8. Example OTel Collector Configuration (YAML)

```yaml
receivers:
  azureeventhub:
    connection: ${EVENTHUB_CONN_STRING}
    consumer_group: '$Default'
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-self'
          static_configs:
            - targets: ['0.0.0.0:8888']

exporters:
  loki:
    endpoint: https://<loki-endpoint>/loki/api/v1/push
  jaeger:
    endpoint: <jaeger-endpoint>:14250
    tls:
      insecure: true
  logging:
    loglevel: info

processors:
  batch: {}
  attributes:
    actions:
      - key: resource.azure.service
        action: insert
        value: appservice
  resource:
    attributes:
      - key: environment
        value: spike
        action: upsert

service:
  pipelines:
    logs:
      receivers: [azureeventhub]
      processors: [attributes, resource, batch]
      exporters: [loki, logging]
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [logging]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [jaeger]
```

---

## 9. Cost Estimation Table

| Resource                  | Unit                 | Estimated Usage  | Cost (Monthly CAD) | Notes                                |
| ------------------------- | -------------------- | ---------------- | ------------------ | ------------------------------------ |
| Event Hub (Standard Tier) | 1 Throughput Unit    | 30 GB ingress    | ~$35               | Includes egress & partition usage    |
| AKS Node (B2s shared)     | 0.5 vCPU, 0.5 GB RAM | 720 hours        | ~$25               | For single OTel pod                  |
| Loki Storage              | 10 GB                | 30-day retention | ~$15               | Based on blob storage cost           |
| Grafana/Jaeger            | Shared existing      | N/A              | $0                 | Reused monitoring stack              |
| **Total Estimate**        |                      |                  | **~$75/month**     | ± 20% variation depending on traffic |

---

## 10. Risks / Mitigations

| Risk                                   | Impact | Mitigation                                               |
| -------------------------------------- | ------ | -------------------------------------------------------- |
| Schema mismatch in Event Hub logs      | High   | Use JSON parser in pipeline or attributes processor      |
| High cardinality labels in Loki        | Medium | Normalize labels and drop excessive metadata             |
| Network/auth issues between components | High   | Validate connectivity and credentials early              |
| Event Hub throttling                   | Medium | Increase partition count or TUs temporarily              |
| Lack of operational automation         | Low    | Document manual steps and plan automation in next sprint |

---

## 11. Next Steps

1. Deploy Helm chart with the configuration above.
2. Test ingestion end-to-end and document results.
3. Generate cost and latency charts.
4. Prepare go/no-go recommendation for Option 3 adoption.
