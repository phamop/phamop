@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Container Diagram for Observability Platform with OSS Security Stack

Person(user, "End User", "Corporate user accessing observability dashboards")

System_Boundary(aks_cluster, "Dedicated AKS Cluster - Security Hardened") {
    ' === Security Layer ===
    Container(oauth2_proxy, "OAuth2 Proxy", "OAuth2 Proxy", "Security Proxy", "Handles authentication and authorization with OIDC")
    Container(ingress, "NGINX Ingress", "NGINX + ModSecurity", "Web Server", "Routes traffic with WAF protection")
    Container(cert_manager, "Cert Manager", "cert-manager", "Certificate Controller", "Automated TLS certificate management")
    
    ' === Processing Layer ===
    Container(otel, "OTel Collector", "OpenTelemetry Collector", "Backend Service", "Collects, processes, and routes telemetry data with TLS")
    
    ' === Storage Layer ===
    Container(prometheus, "Prometheus", "Prometheus", "Time-series Database", "Metrics storage with file-based authentication")
    Container(loki, "Loki", "Loki", "Log Database", "Log aggregation with multi-tenant authentication")
    Container(jaeger, "Jaeger", "Jaeger", "Tracing System", "Distributed tracing with storage plugins")
    
    ' === Visualization Layer ===
    Container(grafana, "Grafana", "Grafana", "Web Application", "Unified dashboard with RBAC and Azure AD integration")
    
    ' === Internal Storage ===
    ContainerDb(prometheus_db, "Prometheus TSDB", "TSDB", "Local metrics storage (encrypted volumes)")
    ContainerDb(loki_db, "Loki Object Storage", "Object Storage", "Local log storage (encrypted)")
    ContainerDb(jaeger_db, "Jaeger Backend", "Elasticsearch/Cassandra", "Trace storage (encrypted at rest)")
    
    ' === Security Components ===
    Container(vault, "Vault Injector", "Hashicorp Vault", "Secrets Management", "Manages secrets and certificates injection")
    Container(opa, "OPA Gatekeeper", "Open Policy Agent", "Policy Controller", "Enforces security policies and compliance")
}

' === External Systems ===
Container(app_pods, "Application Pods", "Various", "Kubernetes Pods", "Source applications with OTLP instrumentation")
Container(vm_agents, "VM/Node Agents", "Various", "Monitoring Agent", "Infrastructure agents with mTLS")
ContainerDb(blob_storage, "Azure Blob Storage", "Azure Blob Storage", "Cloud Object Storage", "Long-term encrypted data retention")
System_Ext(aad, "Azure AD", "Microsoft Entra ID", "Identity Provider", "OIDC provider for SSO authentication")
System_Ext(letsencrypt, "Let's Encrypt", "Let's Encrypt", "Certificate Authority", "Free TLS certificate authority")

' === Security Relationships ===
Rel(ingress, oauth2_proxy, "Validates auth tokens", "JWT validation")
Rel(oauth2_proxy, aad, "OIDC authentication", "OAuth2/OIDC")
Rel(cert_manager, letsencrypt, "Requests certificates", "ACME protocol")
Rel(vault, aad, "Azure AD authentication", "OIDC")
Rel(opa, aks_cluster, "Enforces policies", "Admission control")

' === Data Flow with Security ===
Rel(app_pods, ingress, "Sends OTLP/gRPC", "mTLS encrypted")
Rel(vm_agents, ingress, "Sends OTLP/gRPC", "mTLS encrypted")
Rel(ingress, otel, "Routes traffic", "HTTPS with WAF")
Rel(otel, prometheus, "Sends metrics", "HTTPS with auth")
Rel(otel, loki, "Sends logs", "HTTPS with auth")
Rel(otel, jaeger, "Sends traces", "HTTPS with auth")

' === Query Relationships ===
Rel(grafana, prometheus, "Queries metrics", "HTTPS with bearer token")
Rel(grafana, loki, "Queries logs", "HTTPS with bearer token")
Rel(grafana, jaeger, "Queries traces", "HTTPS with bearer token")

' === Storage Relationships ===
Rel(prometheus, prometheus_db, "Stores metrics", "Encrypted volume")
Rel(loki, loki_db, "Stores logs", "Encrypted storage")
Rel(jaeger, jaeger_db, "Stores traces", "Encrypted connection")
Rel(prometheus, blob_storage, "Exports metrics", "Azure SAS token")
Rel(loki, blob_storage, "Exports logs", "Azure SAS token")

' === User Access ===
Rel(user, ingress, "Accesses Grafana", "HTTPS with TLS 1.3")
Rel(user, aad, "Authenticates", "OIDC redirect")
Rel(aad, oauth2_proxy, "Issues tokens", "OIDC callback")

' === Secrets Management ===
Rel(vault, prometheus, "Injects credentials", "Sidecar injection")
Rel(vault, loki, "Injects credentials", "Sidecar injection")
Rel(vault, jaeger, "Injects credentials", "Sidecar injection")
Rel(vault, grafana, "Injects secrets", "Init container")

' === Layout ===
Lay_D(ingress, oauth2_proxy)
Lay_R(oauth2_proxy, otel)
Lay_D(otel, prometheus)
Lay_R(prometheus, loki)
Lay_R(loki, jaeger)
Lay_D(prometheus, grafana)

@enduml
