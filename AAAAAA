Update: We've successfully moved from a naming convention to a label-based system.

What this means: Finding and managing resources is now more consistent and tool-friendly.

Action Needed: Please use the new label standards for all future work. The full schema and examples are documented in the wiki.






################################################################################
# BASE CONFIGURATION
################################################################################

# kustomize/base/grafana-operator/namespace.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: grafana-operator

---
# kustomize/base/grafana-operator/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: grafana-operator

resources:
  - namespace.yaml
  - grafana-admin.yaml
  - grafana-inst.yaml
  - azure-monitor-datasource.yaml
  - jaeger-datasource.yaml
  - loki-datasource.yaml
  - prometheus-datasource.yaml
  - hybrid-dashboard.yaml
  - helm-values.yaml

helmCharts:
  - name: grafana-operator
    repo: oci://ghcr.io/grafana/helm-charts
    version: v5.19.4
    releaseName: grafana-operator
    namespace: grafana-operator
    valuesFile: grafana-operator-values.yaml

---
# kustomize/base/grafana-operator/grafana-operator-values.yaml
# Helm values for Grafana Operator v5.19.4
namespaceScope: false
watchNamespaces: ""

operator:
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

---
# kustomize/base/grafana-operator/grafana-admin.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-credentials
  namespace: grafana-operator
type: Opaque
stringData:
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: changeme123!

---
# kustomize/base/grafana-operator/grafana-inst.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-instance
  namespace: grafana-operator
  labels:
    dashboards: "grafana"
spec:
  config:
    log:
      mode: "console"
      level: "info"
    auth:
      disable_login_form: "false"
    security:
      admin_user:
        valueFrom:
          secretKeyRef:
            name: grafana-admin-credentials
            key: GF_SECURITY_ADMIN_USER
      admin_password:
        valueFrom:
          secretKeyRef:
            name: grafana-admin-credentials
            key: GF_SECURITY_ADMIN_PASSWORD
    server:
      root_url: "http://grafana.example.com"

  deployment:
    spec:
      replicas: 1
      template:
        spec:
          containers:
            - name: grafana
              image: grafana/grafana:11.0.0
              resources:
                limits:
                  cpu: 500m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 512Mi
              volumeMounts:
                - name: grafana-storage
                  mountPath: /var/lib/grafana
          volumes:
            - name: grafana-storage
              persistentVolumeClaim:
                claimName: grafana-pvc

  # PVC Configuration
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      # storageClassName: standard  # Uncomment and set your storage class

  service:
    metadata:
      labels:
        app: grafana
    spec:
      type: ClusterIP
      ports:
        - name: http
          port: 3000
          targetPort: 3000
          protocol: TCP

  ingress:
    enabled: false

---
# kustomize/base/grafana-operator/prometheus-datasource.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: prometheus-datasource
  namespace: grafana-operator
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  datasource:
    name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus-operated.prometheus:9090
    isDefault: true
    jsonData:
      timeInterval: "30s"
      httpMethod: "POST"
    editable: true

---
# kustomize/base/grafana-operator/loki-datasource.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: loki-datasource
  namespace: grafana-operator
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  datasource:
    name: Loki
    type: loki
    access: proxy
    url: http://loki-gateway.loki:3100
    jsonData:
      maxLines: 1000
    editable: true

---
# kustomize/base/grafana-operator/jaeger-datasource.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: jaeger-datasource
  namespace: grafana-operator
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  datasource:
    name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger-query.jaeger:16686
    editable: true

---
# kustomize/base/grafana-operator/azure-monitor-datasource.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: azure-monitor-datasource
  namespace: grafana-operator
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  datasource:
    name: Azure Monitor
    type: grafana-azure-monitor-datasource
    access: proxy
    jsonData:
      cloudName: "azuremonitor"
      subscriptionId: "your-subscription-id"
      tenantId: "your-tenant-id"
    secureJsonData:
      clientSecret: "your-client-secret"
    editable: true

---
# kustomize/base/grafana-operator/hybrid-dashboard.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: hybrid-monitoring-dashboard
  namespace: grafana-operator
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  json: |
    {
      "title": "Hybrid Monitoring Dashboard",
      "uid": "hybrid-monitoring",
      "panels": [
        {
          "id": 1,
          "title": "CPU Usage",
          "type": "graph",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "rate(container_cpu_usage_seconds_total[5m])"
            }
          ]
        },
        {
          "id": 2,
          "title": "Request Traces",
          "type": "table",
          "datasource": "Jaeger"
        },
        {
          "id": 3,
          "title": "Application Logs",
          "type": "logs",
          "datasource": "Loki"
        }
      ]
    }

---
# kustomize/base/grafana-operator/helm-values.yaml
# This file can be used for additional Helm chart deployments if needed
# Currently placeholder for future use

################################################################################
# OVERLAY CONFIGURATION - EDIT ENVIRONMENT
################################################################################

---
# kustomize/overlays/EDIT/06grafana/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: grafana-operator

resources:
  - ../../../base/grafana-operator
  - serviceaccount.yaml

patches:
  - path: grafana-inst.yaml
  - path: config-patch.yaml
  - path: ordering-config.yaml

---
# kustomize/overlays/EDIT/06grafana/grafana-inst.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-instance
  namespace: grafana-operator
spec:
  config:
    server:
      root_url: "https://grafana.edit.example.com"
  
  persistentVolumeClaim:
    spec:
      storageClassName: fast-ssd  # EDIT environment uses fast storage
      resources:
        requests:
          storage: 20Gi  # Increased storage for EDIT
  
  ingress:
    enabled: false

---
# kustomize/overlays/EDIT/06grafana/config-patch.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-instance
  namespace: grafana-operator
spec:
  config:
    auth.anonymous:
      enabled: "false"
    auth.basic:
      enabled: "true"
    analytics:
      reporting_enabled: "false"
      check_for_updates: "false"
    log:
      level: "debug"
    alerting:
      enabled: "true"

---
# kustomize/overlays/EDIT/06grafana/ordering-config.yaml
# Ensures Grafana instance is created after operators and dependencies
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-ordering
  namespace: grafana-operator
  annotations:
    argocd.argoproj.io/sync-wave: "6"
data:
  note: "This ensures Grafana deploys in wave 6 after all dependencies"

---
# kustomize/overlays/EDIT/06grafana/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-sa
  namespace: grafana-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-role
  namespace: grafana-operator
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-rolebinding
  namespace: grafana-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana-role
subjects:
  - kind: ServiceAccount
    name: grafana-sa
    namespace: grafana-operator

################################################################################
# OVERLAY CONFIGURATION - EDDV ENVIRONMENT
################################################################################

---
# kustomize/overlays/EDDV/grafana/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: grafana-operator

resources:
  - ../../../base/grafana-operator
  - serviceaccount.yaml

patches:
  - path: config-patch.yaml

---
# kustomize/overlays/EDDV/grafana/config-patch.yaml
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-instance
  namespace: grafana-operator
spec:
  config:
    server:
      root_url: "https://grafana.eddv.example.com"
  
  persistentVolumeClaim:
    spec:
      storageClassName: standard  # EDDV uses standard storage
      resources:
        requests:
          storage: 10Gi
  
  ingress:
    enabled: false

---
# kustomize/overlays/EDDV/grafana/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-sa
  namespace: grafana-operator

################################################################################
# HELM CONFIGURATION
################################################################################

---
# helm/source/grafana/Chart.yaml
apiVersion: v2
name: grafana-operator-source
description: Grafana Operator Helm Chart Source
type: application
version: 5.19.4
appVersion: "5.19.4"

---
# helm/source/grafana/source.yaml
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: grafana-operator
  namespace: flux-system
spec:
  interval: 10m
  type: oci
  url: oci://ghcr.io/grafana/helm-charts

---
# helm/values/EDIT/grafana-operator/Chart.yaml
apiVersion: v2
name: grafana-operator-edit
description: Grafana Operator deployment for EDIT environment
type: application
version: 5.19.4
appVersion: "5.19.4"
dependencies:
  - name: grafana-operator
    version: v5.19.4
    repository: oci://ghcr.io/grafana/helm-charts

---
# helm/values/EDIT/grafana-operator/values.yaml
namespaceScope: false
watchNamespaces: ""

operator:
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 150m
      memory: 256Mi

grafana:
  enabled: true
  persistence:
    enabled: true
    storageClassName: fast-ssd
    size: 20Gi
    accessModes:
      - ReadWriteOnce

---
# helm/values/EDIT/grafana-operator/deploy.yaml
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-operator
  namespace: grafana-operator
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana-operator
      version: v5.19.4
      sourceRef:
        kind: HelmRepository
        name: grafana-operator
        namespace: flux-system
  values:
    namespaceScope: false
    operator:
      resources:
        limits:
          cpu: 300m
          memory: 512Mi
        requests:
          cpu: 150m
          memory: 256Mi

################################################################################
# CLUSTER OPERATOR BASE CONFIGURATION
################################################################################

---
# cluster/base/grafana-operator/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: grafana-operator

---
# cluster/base/grafana-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-operator
  namespace: grafana-operator

---
# cluster/base/grafana-operator/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: grafana-operator

resources:
  - namespace.yaml
  - serviceaccount.yaml

helmCharts:
  - name: grafana-operator
    repo: oci://ghcr.io/grafana/helm-charts
    version: v5.19.4
    releaseName: grafana-operator
    namespace: grafana-operator

################################################################################
# CLUSTER OVERLAY CONFIGURATION
################################################################################

---
# cluster/overlays/EDIT/grafana-operator/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: grafana-operator

resources:
  - ../../../base/grafana-operator
  - ordering-config.yaml

---
# cluster/overlays/EDIT/grafana-operator/ordering-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-operator-ordering
  namespace: grafana-operator
  annotations:
    argocd.argoproj.io/sync-wave: "1"
data:
  deployment-order: "Deploy after cert-manager and before application components"
