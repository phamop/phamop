provide detail design and implementation for "VMs behind an Azure Load Balancer for OTLP 4317/4318.
 Receive all metrics, logs, traces from AKS via OTLP to the vm . Ensure the it push with gRPc
Run Grafana +postgresql, Prometheus+thanos, Loki (distributed), Jaeger , jaegertracing (collectors/query) + elasticSearch and an OTel gateway on every VM (Docker).
Ensure grafana is accessed via port 443 using nginx and app-gateway
Use Premium SSD for fast local TSDB/WAL/caches; use Azure Blob for durable, scalable object storage.  
30 days retention  for raw data, arhieve the data  and how is  databases retention manage, 
certificate  store  azure vault  
Scale from 3→ 10 VMs without client reconfiguration. Provide C4 diagram for this solution
Provide TLS/mTLS, SSO, least-privilege access, and safe concurrency (no data corruption)."







@startuml VM_Observability
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

' ==== THEME & COLORS ====
' People
UpdateElementStyle(Person, $bgColor="#4A90E2", $fontColor="white", $borderColor="#2C5AA0")

' External Systems
UpdateElementStyle(System_Ext, $bgColor="#1565C0", $fontColor="white", $borderColor="#0D47A1")

' VM Boundary
UpdateElementStyle(System_Boundary, $bgColor="#E3F2FD", $fontColor="black", $borderColor="#90CAF9")

' Containers inside VM
UpdateElementStyle(Container, $bgColor="#BBDEFB", $fontColor="black", $borderColor="#1976D2")
UpdateElementStyle(Container, $shadowing="true")

' Specific component overrides
UpdateElementStyle(lb, $bgColor="#42A5F5", $fontColor="white", $borderColor="#1565C0")
UpdateElementStyle(otel, $bgColor="#7E57C2", $fontColor="white", $borderColor="#5E35B1")
UpdateElementStyle(prom, $bgColor="#388E3C", $fontColor="white", $borderColor="#1B5E20")
UpdateElementStyle(loki, $bgColor="#00897B", $fontColor="white", $borderColor="#004D40")
UpdateElementStyle(jaeger, $bgColor="#F57C00", $fontColor="white", $borderColor="#E65100")
UpdateElementStyle(pg, $bgColor="#546E7A", $fontColor="white", $borderColor="#37474F")
UpdateElementStyle(graf, $bgColor="#D81B60", $fontColor="white", $borderColor="#880E4F")
UpdateElementStyle(nginx, $bgColor="#8E24AA", $fontColor="white", $borderColor="#4A148C")

' External dependencies
UpdateElementStyle(blob, $bgColor="#039BE5", $fontColor="white", $borderColor="#01579B")
UpdateElementStyle(vault, $bgColor="#6D4C41", $fontColor="white", $borderColor="#3E2723")
UpdateElementStyle(ad, $bgColor="#512DA8", $fontColor="white", $borderColor="#311B92")

' ==== ELEMENTS ====
Person(dev, "Developers/SREs", "Access dashboards and query telemetry")
System_Ext(aks, "AKS Cluster", "Telemetry Producers (metrics, logs, traces)")

System_Boundary(vmss, "VM Scale Set (3-10)") {
  Container(lb, "Azure Load Balancer", "Distributes OTLP traffic (4317/4318)")
  Container(vm, "Observability VM", "Dockerized telemetry stack") {
    Container(otel, "OTel Gateway", "Receives OTLP (gRPC/HTTP)")
    Container(prom, "Prometheus + Thanos", "Metrics collection & long-term storage")
    Container(loki, "Loki (Distributed)", "Logs storage & queries")
    Container(jaeger, "Jaeger + Elasticsearch", "Trace storage & queries")
    Container(pg, "PostgreSQL", "Grafana backend DB")
    Container(graf, "Grafana", "Dashboards, SSO via Azure AD")
    Container(nginx, "Nginx + AppGW", "Ingress, TLS termination, port 443")
  }
}

System_Ext(blob, "Azure Blob Storage", "Durable Object Storage")
System_Ext(vault, "Azure Key Vault", "TLS/mTLS Certificates, Secrets")
System_Ext(ad, "Azure AD", "SSO for Grafana")

' ==== RELATIONSHIPS ====
Rel(aks, lb, "Send OTLP telemetry (4317/4318 gRPC/HTTP)")
Rel(lb, otel, "Forward telemetry", "OTLP gRPC/HTTP")
Rel(otel, prom, "Push metrics")
Rel(otel, loki, "Push logs")
Rel(otel, jaeger, "Push traces")
Rel(prom, blob, "Archive TSDB", "Thanos")
Rel(loki, blob, "Archive logs")
Rel(jaeger, blob, "Archive traces")
Rel(graf, prom, "Query metrics")
Rel(graf, loki, "Query logs")
Rel(graf, jaeger, "Query traces")
Rel(dev, graf, "Access dashboards (port 443, TLS, SSO)", "HTTPS")
Rel(graf, pg, "Config & users")
Rel(nginx, graf, "Reverse proxy / SSO enforcement")
Rel(graf, ad, "SSO login")
Rel(graf, vault, "Certs & keys retrieval")

@enduml





















@startuml VM_Observability
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(dev, "Developers/SREs", "Access dashboards and query telemetry")
System_Ext(aks, "AKS Cluster", "Telemetry Producers (metrics, logs, traces)")

System_Boundary(vmss, "VM Scale Set (3-10)") {
  Container(lb, "Azure Load Balancer", "Distributes OTLP traffic (4317/4318)")
  Container(vm, "Observability VM", "Dockerized telemetry stack") {
    Container(otel, "OTel Gateway", "Receives OTLP (gRPC/HTTP)")
    Container(prom, "Prometheus + Thanos", "Metrics collection & long-term storage")
    Container(loki, "Loki (Distributed)", "Logs storage & queries")
    Container(jaeger, "Jaeger + Elasticsearch", "Trace storage & queries")
    Container(pg, "PostgreSQL", "Grafana backend DB")
    Container(graf, "Grafana", "Dashboards, SSO via Azure AD")
    Container(nginx, "Nginx + AppGW", "Ingress, TLS termination, port 443")
  }
}

System_Ext(blob, "Azure Blob Storage", "Durable Object Storage")
System_Ext(vault, "Azure Key Vault", "TLS/mTLS Certificates, Secrets")
System_Ext(ad, "Azure AD", "SSO for Grafana")

Rel(aks, lb, "Send OTLP metrics/logs/traces (4317/4318 gRPC/HTTP)")
Rel(lb, otel, "Forward telemetry", "gRPC/HTTP OTLP")
Rel(otel, prom, "Push metrics")
Rel(otel, loki, "Push logs")
Rel(otel, jaeger, "Push traces")
Rel(prom, blob, "Archive TSDB", "Thanos")
Rel(loki, blob, "Archive logs")
Rel(jaeger, blob, "Archive traces")
Rel(graf, prom, "Query metrics")
Rel(graf, loki, "Query logs")
Rel(graf, jaeger, "Query traces")
Rel(dev, graf, "Access dashboards (port 443, TLS, SSO)", "HTTPS")
Rel(graf, pg, "Config & users")
Rel(nginx, graf, "Reverse proxy / SSO enforcement")
Rel(graf, ad, "SSO login")
Rel(graf, vault, "Certs & keys retrieval")
@enduml





-----




















@startuml VM_Observability
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Define a color palette
!define OBSERVABILITY_BLUE #1976D2
!define AZURE_BLUE #0078D4
!define STORAGE_YELLOW #FFC107
!define SECURITY_RED #D32F2F
!define AUTH_GREEN #388E3C

' Apply styles
skinparam {
  Shadowing false
  ArrowColor #444
  BorderColor #666
  ActorBorderColor #666
  ComponentBorderColor #666
  RectangleBorderColor #666
  NoteBackgroundColor #FFFDE7
  NoteBorderColor #F57F17
}

System_Ext(aks, "AKS Cluster", "Sends telemetry via OTLP 4317/4318", $sprite="kubernetes", $tags="azure")
System_Boundary(vmss, "VM Scale Set (3-10 VMs)") {
  Container(lb, "Azure Load Balancer", "Routes OTLP traffic", $tags="azure")
  Container(vm, "VM (Docker Stack)", "Grafana, Prometheus, Loki, Jaeger, OTel Gateway", $tags="observability")
}

System_Ext(blob, "Azure Blob Storage", "Durable object store, 30d retention", $sprite="storage", $tags="storage")
System_Ext(vault, "Azure Key Vault", "TLS/mTLS, secrets, certs", $sprite="lock", $tags="security")
System_Ext(ad, "Azure AD", "SSO provider for Grafana", $sprite="users", $tags="auth")

' Apply colors to elements
AddElementTag("azure", $fontColor=AZURE_BLUE, $borderColor=AZURE_BLUE, $bgColor="#E3F2FD")
AddElementTag("observability", $fontColor=OBSERVABILITY_BLUE, $borderColor=OBSERVABILITY_BLUE, $bgColor="#E8F5E9")
AddElementTag("storage", $fontColor=STORAGE_YELLOW, $borderColor=STORAGE_YELLOW, $bgColor="#FFFDE7")
AddElementTag("security", $fontColor=SECURITY_RED, $borderColor=SECURITY_RED, $bgColor="#FFEBEE")
AddElementTag("auth", $fontColor=AUTH_GREEN, $borderColor=AUTH_GREEN, $bgColor="#E8F5E9")

Rel(aks, lb, "OTLP traffic (4317/4318)", $tags="azure")
Rel(lb, vm, "Distributes OTLP", $tags="azure")
Rel(vm, blob, "Remote write / logs", $tags="storage")
Rel(vm, vault, "Fetch TLS certs / secrets", $tags="security")
Rel(vm, ad, "OIDC SSO", $tags="auth")

' Add a legend
legend right
  | Color | Purpose |
  | <color:AZURE_BLUE>█</color> | Azure Infrastructure |
  | <color:OBSERVABILITY_BLUE>█</color> | Observability Tools |
  | <color:STORAGE_YELLOW>█</color> | Storage |
  | <color:SECURITY_RED>█</color> | Security |
  | <color:AUTH_GREEN>█</color> | Authentication |
endlegend

title Observability Stack on Azure VM Scale Set - HA High Level
@enduml


---
@startuml VM_Observability
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

System_Ext(aks, "AKS Cluster", "Sends telemetry via OTLP 4317/4318")
System_Boundary(vmss, "VM Scale Set (3-10 VMs)") {
  Container(lb, "Azure Load Balancer", "Routes OTLP traffic")
  Container(vm, "VM (Docker Stack)", "Grafana, Prometheus, Loki, Jaeger, OTel Gateway")
}

System_Ext(blob, "Azure Blob Storage", "Durable object store, 30d retention")
System_Ext(vault, "Azure Key Vault", "TLS/mTLS, secrets, certs")
System_Ext(ad, "Azure AD", "SSO provider for Grafana")

Rel(aks, lb, "OTLP traffic (4317/4318)")
Rel(lb, vm, "Distributes OTLP")
Rel(vm, blob, "Remote write / logs")
Rel(vm, vault, "Fetch TLS certs / secrets")
Rel(vm, ad, "OIDC SSO")
@enduml
