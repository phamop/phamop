
[error] 9#9: unexpected DNS response for loki.good9009.svc.cluster.local
2025/06/24 04:06:09 [error] 9#9: unexpected DNS response for loki.good9009.svc.cluster.local
2025/06/24 04:06:09 [error] 9#9: *17 connect() failed (111: Connection refused) while connecting to upstream, client: 10.244.3.145, server: , request: "POST /loki/api/v1/push HTTP/1.1", upstream: "http://10.0.0.120:3100/loki/api/v1/push", host: "loki-gateway.good9009.svc.cluster.local.:80"
# Loki Helm Chart Configuration - Validated for Deployment
loki:
  commonConfig:
    replication_factor: 1
  storage:
    type: 'filesystem'
    bucketNames:
      chunks: chunks
      ruler: ruler
      admin: admin
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: filesystem
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    filesystem:
      directory: /var/loki/chunks  # Changed from /tmp for persistence
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    # Add recommended limits for production stability
    ingestion_rate_mb: 4
    ingestion_burst_size_mb: 6
    max_streams_per_user: 10000
    max_line_size: "256KB"
    retention_period: "168h"  # 7 days
  ruler:
    enable_api: true
    storage:
      type: local
      local:
        directory: /var/loki/rules
  auth_enabled: false

# Explicitly disable MinIO since using filesystem storage
minio:
  enabled: false

# Single Binary deployment mode for simplified setup
deploymentMode: SingleBinary

singleBinary:
  replicas: 1
  persistence:
    enabled: true  # Explicitly enable persistence
    storageClass: default
    accessModes:
      - ReadWriteOnce
    size: 20Gi
  # Add security context for proper file permissions
  securityContext:
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "2"
      memory: "4Gi"
  # Add volume mounts for proper data persistence
  extraVolumeMounts:
    - name: data
      mountPath: /var/loki
      subPath: loki-data

# Configure sidecar properly for rules management
sidecar:
  rules:
    enabled: false  # Disable rules sidecar
    # If you need rules sidecar, configure it properly:
    # enabled: true
    # searchNamespace: ALL
    # folder: /tmp/scratch
    # folderAnnotation: loki_rule
  datasources:
    enabled: false  # Disable datasources sidecar

# Properly disable distributed components for SingleBinary mode
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

# Configure chunks cache with proper units
chunksCache:
  allocatedMemory: 512  # In MB

# Add monitoring and health checks
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false  # Set to true if using Prometheus Operator

# Configure service for access
service:
  type: ClusterIP
  port: 3100
  targetPort: 3100

# Gateway configuration - use defaults
gateway:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# Add ingress configuration (optional)
ingress:
  enabled: false  # Set to true and configure if needed
  # className: nginx
  # hosts:
  #   - host: loki.example.com
  #     paths:
  #       - path: /
  #         pathType: Prefix
