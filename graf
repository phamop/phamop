





































https://us02web.zoom.us/j/87116799499?pwd=xXbbTJfGzigJtJkxfJG1DgLWe7V5qq.1


##[error]Capturing deployment metadata failed with error: YAMLException: duplicated mapping key at line 320, column 9:

kubectl get secret tls-secret -n eddv3-hbt -o jsonpath="{.data['tls\.crt']}" | base64 -d | openssl x509 -text -noout




schannel: disabled automatic use of client certificate
* ALPN: curl offers http/1.1
* schannel: SEC_E_UNTRUSTED_ROOT (0x80090325) - The certificate chain was issued by an authority that is not trusted.
* closing connection #0
curl: (60) schannel: SEC_E_UNTRUSTED_ROOT (0x80090325) - The certificate chain was issued by an authority that is not trusted.
More details here: https://curl.se/docs/sslcerts.html

curl failed to verify the legitimacy of the server and therefore could not
establish a secure connection to it. To learn more about this situation and
how to fix it, please visit the webpage mentioned above.







"GET /grafana/ HTTP/1.1" 400 230 "-" "curl/8.14.1" 81 0.000 [] []

invalid ingress configuration" err="ingress contains invalid paths: path /grafana(/|$)(.*) cannot be used with pathType Prefix" ingress=

##[error]Error: failed to parse /azp/agent/_work/40/s/devops/helm-charts/observability/grafana/grafana-values-dev.yaml: error converting YAML to JSON: yaml: line 874: did not find expected key



grafana.ini:
  server:
    root_url: "%(protocol)s://%(domain)s/grafana"
    serve_from_sub_path: true




apiVersion: v1
kind: Service
metadata:
  name: grafana-proxy
  namespace: eddv3-hbt
  labels:
    app.kubernetes.io/name: grafana-proxy
    app.kubernetes.io/component: proxy
spec:
  type: ExternalName
  externalName: grafana.monitoring.svc.cluster.local  
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000  # Changed to Grafana's default port

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-proxy-headers
  namespace: eddv3-hbt
data:
  Host: "$host"
  X-Real-IP: "$remote_addr"
  X-Forwarded-Proto: "$scheme"
  X-Forwarded-For: "$proxy_add_x_forwarded_for"


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hbt-grafana-ingress
  namespace: eddv3-hbt
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    # Replaced configuration-snippet with standard annotations
    nginx.ingress.kubernetes.io/proxy-set-headers: "eddv3-hbt/grafana-proxy-headers"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - eddv3-hbt
      secretName: tls-secret
  rules:
  - host: eddv3-hbt
    http:
      paths:
      - path: /grafana # Fixed path pattern
        pathType: Prefix
        backend:
          service:
            name: grafana-proxy
            port:
              number: 80

