10:23:54.339000 [0-0] == Info: using HTTP/1.x
10:23:54.346000 [0-0] => Send header, 73 bytes (0x49)
0000: GET / HTTP/1.1
0010: Host: eddv3-hbt
0021: User-Agent: curl/8.14.1
003a: Accept: */*
0047: 
10:23:54.367000 [0-0] == Info: schannel: remote party requests renegotiation
10:23:54.375000 [0-0] == Info: schannel: renegotiating SSL/TLS connection
10:23:54.383000 [0-0] == Info: schannel: SSL/TLS connection renegotiated
10:23:54.390000 [0-0] == Info: schannel: remote party requests renegotiation
10:23:54.398000 [0-0] == Info: schannel: renegotiating SSL/TLS connection
10:23:54.410000 [0-0] == Info: schannel: SSL/TLS connection renegotiated
10:23:54.420000 [0-0] == Info: schannel: server close notification received (close_notify)
10:23:54.432000 [0-0] == Info: [SSL] cf_recv(len=102400) -> 360, 0
10:23:54.440000 [0-0] <= Recv header, 26 bytes (0x1a)
0000: HTTP/1.1 400 Bad Request
10:23:54.449000 [0-0] == Info: [WRITE] [OUT] wrote 26 header bytes -> 26
10:23:54.457000 [0-0] == Info: [WRITE] [PAUSE] writing 26/26 bytes of type c -> 0
10:23:54.467000 [0-0] == Info: [WRITE] download_write header(type=c, blen=26) -> 0
10:23:54.477000 [0-0] == Info: [WRITE] client_write(type=c, len=26) -> 0
10:23:54.486000 [0-0] <= Recv header, 37 bytes (0x25)
0000: Date: Mon, 28 Jul 2025 14:23:54 GMT
10:23:54.497000 [0-0] == Info: [WRITE] header_collect pushed(type=1, len=37) -> 0
10:23:54.509000 [0-0] == Info: [WRITE] [OUT] wrote 37 header bytes -> 37
10:23:54.517000 [0-0] == Info: [WRITE] [PAUSE] writing 37/37 bytes of type 4 -> 0
10:23:54.528000 [0-0] == Info: [WRITE] download_write header(type=4, blen=37) -> 0
10:23:54.536000 [0-0] == Info: [WRITE] client_write(type=4, len=37) -> 0
10:23:54.545000 [0-0] <= Recv header, 25 bytes (0x19)
0000: Content-Type: text/html
10:23:54.555000 [0-0] == Info: [WRITE] header_collect pushed(type=1, len=25) -> 0
10:23:54.566000 [0-0] == Info: [WRITE] [OUT] wrote 25 header bytes -> 25
10:23:54.575000 [0-0] == Info: [WRITE] [PAUSE] writing 25/25 bytes of type 4 -> 0
10:23:54.584000 [0-0] == Info: [WRITE] download_write header(type=4, blen=25) -> 0
10:23:54.595000 [0-0] == Info: [WRITE] client_write(type=4, len=25) -> 0
10:23:54.604000 [0-0] <= Recv header, 21 bytes (0x15)
0000: Content-Length: 230
10:23:54.612000 [0-0] == Info: [WRITE] header_collect pushed(type=1, len=21) -> 0
10:23:54.623000 [0-0] == Info: [WRITE] [OUT] wrote 21 header bytes -> 21
10:23:54.632000 [0-0] == Info: [WRITE] [PAUSE] writing 21/21 bytes of type 4 -> 0
10:23:54.642000 [0-0] == Info: [WRITE] download_write header(type=4, blen=21) -> 0
10:23:54.652000 [0-0] == Info: [WRITE] client_write(type=4, len=21) -> 0
10:23:54.662000 [0-0] <= Recv header, 19 bytes (0x13)
0000: Connection: close
10:23:54.672000 [0-0] == Info: [WRITE] header_collect pushed(type=1, len=19) -> 0
10:23:54.681000 [0-0] == Info: [WRITE] [OUT] wrote 19 header bytes -> 19
10:23:54.690000 [0-0] == Info: [WRITE] [PAUSE] writing 19/19 bytes of type 4 -> 0
10:23:54.702000 [0-0] == Info: [WRITE] download_write header(type=4, blen=19) -> 0
10:23:54.715000 [0-0] == Info: [WRITE] client_write(type=4, len=19) -> 0
10:23:54.726000 [0-0] <= Recv header, 2 bytes (0x2)
0000:
10:23:54.737000 [0-0] == Info: [WRITE] header_collect pushed(type=1, len=2) -> 0
10:23:54.752000 [0-0] == Info: [WRITE] [OUT] wrote 2 header bytes -> 2
10:23:54.763000 [0-0] == Info: [WRITE] [PAUSE] writing 2/2 bytes of type 4 -> 0
10:23:54.771000 [0-0] == Info: [WRITE] download_write header(type=4, blen=2) -> 0
10:23:54.782000 [0-0] == Info: [WRITE] client_write(type=4, len=2) -> 0
10:23:54.790000 [0-0] <= Recv data, 230 bytes (0xe6)
0000: <html>
0008: <head><title>400 No required SSL certificate was sent</title></h
0048: ead>
004e: <body>
0056: <center><h1>400 Bad Request</h1></center>
0081: <center>No required SSL certificate was sent</center>
00b8: <hr><center>nginx</center>
00d4: </body>
00dd: </html>
<html>
<head><title>400 No required SSL certificate was sent</title></head>
<body>
<center><h1>400 Bad Request</h1></center>
<center>No required SSL certificate was sent</center>
<hr><center>nginx</center>
</body>
</html>





































https://us02web.zoom.us/j/87116799499?pwd=xXbbTJfGzigJtJkxfJG1DgLWe7V5qq.1


##[error]Capturing deployment metadata failed with error: YAMLException: duplicated mapping key at line 320, column 9:

kubectl get secret tls-secret -n eddv3-hbt -o jsonpath="{.data['tls\.crt']}" | base64 -d | openssl x509 -text -noout




schannel: disabled automatic use of client certificate
* ALPN: curl offers http/1.1
* schannel: SEC_E_UNTRUSTED_ROOT (0x80090325) - The certificate chain was issued by an authority that is not trusted.
* closing connection #0
curl: (60) schannel: SEC_E_UNTRUSTED_ROOT (0x80090325) - The certificate chain was issued by an authority that is not trusted.
More details here: https://curl.se/docs/sslcerts.html

curl failed to verify the legitimacy of the server and therefore could not
establish a secure connection to it. To learn more about this situation and
how to fix it, please visit the webpage mentioned above.







"GET /grafana/ HTTP/1.1" 400 230 "-" "curl/8.14.1" 81 0.000 [] []

invalid ingress configuration" err="ingress contains invalid paths: path /grafana(/|$)(.*) cannot be used with pathType Prefix" ingress=

##[error]Error: failed to parse /azp/agent/_work/40/s/devops/helm-charts/observability/grafana/grafana-values-dev.yaml: error converting YAML to JSON: yaml: line 874: did not find expected key



grafana.ini:
  server:
    root_url: "%(protocol)s://%(domain)s/grafana"
    serve_from_sub_path: true




apiVersion: v1
kind: Service
metadata:
  name: grafana-proxy
  namespace: eddv3-hbt
  labels:
    app.kubernetes.io/name: grafana-proxy
    app.kubernetes.io/component: proxy
spec:
  type: ExternalName
  externalName: grafana.monitoring.svc.cluster.local  
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000  # Changed to Grafana's default port

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-proxy-headers
  namespace: eddv3-hbt
data:
  Host: "$host"
  X-Real-IP: "$remote_addr"
  X-Forwarded-Proto: "$scheme"
  X-Forwarded-For: "$proxy_add_x_forwarded_for"


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hbt-grafana-ingress
  namespace: eddv3-hbt
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    # Replaced configuration-snippet with standard annotations
    nginx.ingress.kubernetes.io/proxy-set-headers: "eddv3-hbt/grafana-proxy-headers"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - eddv3-hbt
      secretName: tls-secret
  rules:
  - host: eddv3-hbt
    http:
      paths:
      - path: /grafana # Fixed path pattern
        pathType: Prefix
        backend:
          service:
            name: grafana-proxy
            port:
              number: 80

