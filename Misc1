global:
  imageRegistry:

provisionDataStore:
  cassandra: false
  elasticsearch: false
  kafka: false

networkPolicy:
  enabled: false

allInOne:
  enabled: true
storage:
  type: memory
agent:
  enabled: false
collector:
  enabled: false
query:
  enabled: false


https://blog.gitguardian.com/how-to-handle-secrets-with-azure-key-vault/
https://everythingdevops.dev/unlock-the-secrets-of-azure-seamless-authentication-with-external-secrets-operator-key-vault-and-workload-identity/
https://medium.com/@rcdinesh1/access-secrets-via-argocd-through-external-secrets-9173001be885

# Creating an Azure AD Application for Grafana Integration

Here's a complete guide to create an Azure AD application for Grafana with the necessary permissions to access Azure Monitor metrics:

## Step 1: Create the Azure AD Application

```bash
# Create the application registration
GRAFANA_APP_NAME="Grafana-Azure-Monitor"
APP_ID=$(az ad app create \
  --display-name "$GRAFANA_APP_NAME" \
  --query appId \
  --output tsv)

echo "Application created with ID: $APP_ID"
```

## Step 2: Create a Service Principal

```bash
# Create service principal for the application
SP_ID=$(az ad sp create --id "$APP_ID" --query id --output tsv)
echo "Service Principal created with ID: $SP_ID"
```

## Step 3: Create Client Secret

```bash
# Create client secret (valid for 1 year)
CLIENT_SECRET=$(az ad app credential reset \
  --id "$APP_ID" \
  --years 1 \
  --query password \
  --output tsv)

echo "Client Secret: $CLIENT_SECRET"
```

## Step 4: Assign Required Permissions

```bash
# Get your Azure subscription ID
SUBSCRIPTION_ID=$(az account show --query id --output tsv)

# Assign Monitoring Reader role at subscription level
az role assignment create \
  --assignee "$APP_ID" \
  --role "Monitoring Reader" \
  --scope "/subscriptions/$SUBSCRIPTION_ID"

# Assign Reader role at subscription level (if needed)
az role assignment create \
  --assignee "$APP_ID" \
  --role "Reader" \
  --scope "/subscriptions/$SUBSCRIPTION_ID"
```

## Step 5: Store Credentials in Azure Key Vault

```bash
KEY_VAULT_NAME="Goodvault"

# Store client ID
az keyvault secret set \
  --vault-name "$KEY_VAULT_NAME" \
  --name "grafana-azure-client-id" \
  --value "$APP_ID"

# Store client secret
az keyvault secret set \
  --vault-name "$KEY_VAULT_NAME" \
  --name "grafana-azure-client-secret" \
  --value "$CLIENT_SECRET"

# Store tenant ID (same as directory ID)
TENANT_ID=$(az account show --query tenantId --output tsv)
az keyvault secret set \
  --vault-name "$KEY_VAULT_NAME" \
  --name "grafana-azure-tenant-id" \
  --value "$TENANT_ID"

# Store subscription ID
az keyvault secret set \
  --vault-name "$KEY_VAULT_NAME" \
  --name "grafana-azure-subscription-id" \
  --value "$SUBSCRIPTION_ID"
```

## Step 6: Configure API Permissions (Optional)

If you need additional permissions:

```bash
# Add Azure Active Directory Graph API permissions
az ad app permission add \
  --id "$APP_ID" \
  --api 00000002-0000-0000-c000-000000000000 \
  --api-permissions 311a71cc-e848-46a1-bdf8-97ff7156d8e6=Scope

# Grant admin consent
az ad app permission admin-consent --id "$APP_ID"
```

## Step 7: Verify the Application

```bash
# Check application registration
az ad app show --id "$APP_ID"

# Check service principal
az ad sp show --id "$APP_ID"

# Check role assignments
az role assignment list --assignee "$APP_ID"
```

## Step 8: Configure Grafana with These Values

Use these values in your Grafana configuration:

- **Azure AD Tenant ID**: `$TENANT_ID`
- **Client ID**: `$APP_ID`
- **Client Secret**: `$CLIENT_SECRET`
- **Subscription ID**: `$SUBSCRIPTION_ID`

## Security Recommendations
 Firtsly, Run the following manually before running the pipeline.
```bash
# Login to Azure CLI
az login

# Create Azure AD application
az ad app create --display-name "Grafana-Azure-Monitor" \
  --reply-urls "https://grafana.yourdomain.com/login/generic_oauth" \
  --required-resource-accesses @grafana-permissions.json

# Create service principal
az ad sp create --id $(az ad app list --display-name "Grafana-Azure-Monitor" --query [].appId -o tsv)

# Get application details
APP_ID=$(az ad app list --display-name "Grafana-Azure-Monitor" --query [].appId -o tsv)
TENANT_ID=$(az account show --query tenantId -o tsv)

# Create client secret (valid for 1 year)
CLIENT_SECRET=$(az ad app credential reset --id $APP_ID --years 1 --query password -o tsv)

# Assign Monitoring Reader role
SUBSCRIPTION_ID=$(az account show --query id -o tsv)
az role assignment create --assignee $APP_ID \
  --role "Monitoring Reader" \
  --scope "/subscriptions/$SUBSCRIPTION_ID"
```

Create `grafana-permissions.json`:
```json
{
  "resourceAppId": "00000003-0000-0000-c000-000000000000",
  "resourceAccess": [
    {
      "id": "7ab1d382-f21e-4acd-a863-ba3e13f7da61",
      "type": "Role"
    }
  ]
}
```

## 2. Store Secrets in Azure Key Vault

```bash
# Store in Key Vault
az keyvault secret set --vault-name YourKeyVault --name "grafana-client-id" --value $APP_ID
az keyvault secret set --vault-name YourKeyVault --name "grafana-tenant-id" --value $TENANT_ID
az keyvault secret set --vault-name YourKeyVault --name "grafana-client-secret" --value $CLIENT_SECRET
az keyvault secret set --vault-name YourKeyVault --name "grafana-subscription-id" --value $SUBSCRIPTION_ID
```

Pipeline for step1 are the following 

## 3. Azure DevOps Pipeline Implementation

Create a new pipeline file `azure-pipelines-grafana.yml`:

```yaml
trigger:
- main

variables:
  - group: 'Grafana-Settings'
  - name: 'keyVaultName'
    value: 'YourKeyVault'
  - name: 'namespace'
    value: 'monitoring'

stages:
- stage: DeployGrafana
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@2
      displayName: 'Get Azure AD Secrets'
      inputs:
        azureSubscription: 'Your-Azure-Service-Connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Get secrets from Key Vault
          CLIENT_ID=$(az keyvault secret show --vault-name $(keyVaultName) --name grafana-client-id --query value -o tsv)
          CLIENT_SECRET=$(az keyvault secret show --vault-name $(keyVaultName) --name grafana-client-secret --query value -o tsv)
          TENANT_ID=$(az keyvault secret show --vault-name $(keyVaultName) --name grafana-tenant-id --query value -o tsv)
          SUBSCRIPTION_ID=$(az keyvault secret show --vault-name $(keyVaultName) --name grafana-subscription-id --query value -o tsv)
          
          # Set pipeline variables for subsequent tasks
          echo "##vso[task.setvariable variable=CLIENT_ID;issecret=true]$CLIENT_ID"
          echo "##vso[task.setvariable variable=CLIENT_SECRET;issecret=true]$CLIENT_SECRET"
          echo "##vso[task.setvariable variable=TENANT_ID]$TENANT_ID"
          echo "##vso[task.setvariable variable=SUBSCRIPTION_ID]$SUBSCRIPTION_ID"

    - task: HelmDeploy@0
      displayName: 'Deploy Grafana with Azure Monitor'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'Your-Azure-Service-Connection'
        azureResourceGroup: 'Your-Resource-Group'
        kubernetesCluster: 'Your-AKS-Cluster'
        namespace: '$(namespace)'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(System.DefaultWorkingDirectory)/charts/grafana'
        releaseName: 'grafana'
        overrideValues: |
          env.GF_AUTH_GENERIC_OAUTH_ENABLED=true
          env.GF_AUTH_GENERIC_OAUTH_CLIENT_ID=$(CLIENT_ID)
          env.GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=$(CLIENT_SECRET)
          env.GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://login.microsoftonline.com/$(TENANT_ID)/oauth2/authorize
          env.GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://login.microsoftonline.com/$(TENANT_ID)/oauth2/token
          datasources.datasources_yaml.datasources[0].jsonData.subscriptionId=$(SUBSCRIPTION_ID)
          datasources.datasources_yaml.datasources[0].jsonData.tenantId=$(TENANT_ID)
          datasources.datasources_yaml.datasources[0].jsonData.clientId=$(CLIENT_ID)
          datasources.datasources_yaml.datasources[0].secureJsonData.clientSecret=$(CLIENT_SECRET)
```


## 5. Grafana Helm Chart Configuration

Ensure your Grafana Helm chart has these values configured:

```yaml
# values.yaml
grafana.ini:
  auth.generic_oauth:
    enabled: true
    name: Azure AD
    client_id: "$__file{/etc/grafana/secrets/oauth/client_id}"
    client_secret: "$__file{/etc/grafana/secrets/oauth/client_secret}"
    scopes: "openid email profile"
    auth_url: "https://login.microsoftonline.com/$__file{/etc/grafana/secrets/oauth/tenant_id}/oauth2/authorize"
    token_url: "https://login.microsoftonline.com/$__file{/etc/grafana/secrets/oauth/tenant_id}/oauth2/token"
    api_url: ""
    allowed_domains: "yourdomain.com"
    allow_sign_up: true

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: AzureMonitor
      type: grafana-azure-monitor-datasource
      jsonData:
        subscriptionId: "$__file{/etc/grafana/secrets/azure/subscription_id}"
        cloudName: azuremonitor
        azureAuthType: clientsecret
        tenantId: "$__file{/etc/grafana/secrets/azure/tenant_id}"
        clientId: "$__file{/etc/grafana/secrets/azure/client_id}"
      secureJsonData:
        clientSecret: "$__file{/etc/grafana/secrets/azure/client_secret}"
```


grafana-aks/
├── Chart.yaml
├── values.yaml
├── templates/
│   ├── deployment.yaml
│   ├── service.yaml
│   ├── ingress.yaml
│   ├── configmap.yaml
│   ├── secrets.yaml
│   └── serviceaccount.yaml
└── crds/
    └── grafana-dashboard-crd.yaml

values.yaml files 
image:
  repository: grafana/grafana
  tag: 9.0.0
  pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  port: 3000
  annotations: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: grafana.yourdomain.com
      paths:
        - path: /
          pathType: Prefix

persistence:
  enabled: true
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 10Gi

env:
  GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
  GF_AUTH_GENERIC_OAUTH_NAME: "Azure AD"
  GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "$__file{/etc/grafana/secrets/azure/client_id}"
  GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "$__file{/etc/grafana/secrets/azure/client_secret}"
  GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile"
  GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://login.microsoftonline.com/$__file{/etc/grafana/secrets/azure/tenant_id}/oauth2/authorize"
  GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://login.microsoftonline.com/$__file{/etc/grafana/secrets/azure/tenant_id}/oauth2/token"

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: AzureMonitor
      type: grafana-azure-monitor-datasource
      orgId: 1
      typeLogoUrl: public/plugins/grafana-azure-monitor-datasource/img/logo.svg
      access: proxy
      url: /api/datasources/proxy/1
      jsonData:
        subscriptionId: "$__file{/etc/grafana/secrets/azure/subscription_id}"
        cloudName: azuremonitor
        azureAuthType: clientsecret
        tenantId: "$__file{/etc/grafana/secrets/azure/tenant_id}"
        clientId: "$__file{/etc/grafana/secrets/azure/client_id}"
      secureJsonData:
        clientSecret: "$__file{/etc/grafana/secrets/azure/client_secret}"
      version: 1
      editable: true

templates/secrets.yaml files
 apiVersion: v1
kind: Secret
metadata:
  name: grafana-azure-secrets
type: Opaque
stringData:
  client_id: |
    {{ .Values.azure.clientId }}
  client_secret: |
    {{ .Values.azure.clientSecret }}
  tenant_id: |
    {{ .Values.azure.tenantId }}
  subscription_id: |
    {{ .Values.azure.subscriptionId }}

grafana-creation-pipeline.yaml


  trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'grafana-aks/*'

variables:
  - group: 'grafana-aks-config'
  - name: 'namespace'
    value: 'monitoring'

stages:
- stage: DeployGrafana
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'your-azure-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Get secrets from Key Vault
          clientId=$(az keyvault secret show --vault-name Goodvault --name grafana-azure-client-id --query value -o tsv)
          clientSecret=$(az keyvault secret show --vault-name Goodvault --name grafana-azure-client-secret --query value -o tsv)
          tenantId=$(az keyvault secret show --vault-name Goodvault --name grafana-azure-tenant-id --query value -o tsv)
          subscriptionId=$(az keyvault secret show --vault-name Goodvault --name grafana-azure-subscription-id --query value -o tsv)
          
          # Helm install/upgrade
          helm upgrade --install grafana grafana-aks/ \
            --namespace $(namespace) \
            --set azure.clientId="$clientId" \
            --set azure.clientSecret="$clientSecret" \
            --set azure.tenantId="$tenantId" \
            --set azure.subscriptionId="$subscriptionId" \
            --values grafana-aks/values.yaml

azure-monitor-integration-pipeline.yaml files 


trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'azure-monitor-config/*'

variables:
  - group: 'azure-monitor-config'
  - name: 'namespace'
    value: 'monitoring'

stages:
- stage: ConfigureAzureMonitor
  jobs:
  - job: Configure
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        namespace: '$(namespace)'
        manifests: |
          azure-monitor-config/azure-monitor-configmap.yaml
          azure-monitor-config/azure-monitor-dashboards.yaml
        strategy: 'kubectl'

alert-dashboard-pipeline.yaml

 trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'dashboards/*'
      - 'alerts/*'

variables:
  - group: 'grafana-alerts-config'
  - name: 'namespace'
    value: 'monitoring'

stages:
- stage: DeployDashboardsAndAlerts
  jobs:
  - job: Deploy
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        namespace: '$(namespace)'
        manifests: |
          dashboards/*.yaml
          alerts/*.yaml
        strategy: 'kubectl'

## 4. Required Pipeli
This setup provides Grafana with the necessary permissions to read monitoring data from Azure Monitor while following security best practices.
Error


Error: Unable to continue with install: could not get information about the resource CustomResourceDefinition "acraccesstokens.generators.external-secrets.io" in namespace "": customresourcedefinitions.apiextensions.k8s.io "acraccesstokens.generators.external-secrets.io" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "customresourcedefinitions" in API group "apiextensions.k8s.io" at the cluster scope
2025-04-15T15:29:03.7358389Z Release "external-secrets" does not exist. Installing it now.
2025-04-15T15:29:03.7395140Z ##[error]Error: Unable to continue with install: could not get information about the resource CustomResourceDefinition "acraccesstokens.generators.external-secrets.io" in namespace "": customresourcedefinitions.apiextensions.k8s.io "acraccesstokens.generators.external-secrets.io" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "customresourcedefinitions" in API group "apiextensions.k8s.io" at the cluster scope

2025-04-15T15:29:03.7447557Z ##[section]Finishing: Deploy ESO Helm Chart

######### update on the ongoing error.

2025-04-16T18:40:04.6633463Z ##[section]Starting: Create Secret SecretStore
2025-04-16T18:40:04.6641099Z ==============================================================================
2025-04-16T18:40:04.6641247Z Task         : Kubectl
2025-04-16T18:40:04.6641309Z Description  : Deploy, configure, update a Kubernetes cluster in Azure Container Service by running kubectl commands
2025-04-16T18:40:04.6641444Z Version      : 1.255.0
2025-04-16T18:40:04.6641505Z Author       : Microsoft Corporation
2025-04-16T18:40:04.6641574Z Help         : https://aka.ms/azpipes-kubectl-tsg
2025-04-16T18:40:04.6641875Z ==============================================================================
2025-04-16T18:40:05.6807772Z Prepending PATH environment variable with directory: /usr/local/bin
2025-04-16T18:40:05.6827475Z [command]/azp/agent/_work/_temp/a1e3f1d4-6aa5-4f22-a5e3-51270744f80c/bin/linux_amd64/kubelogin convert-kubeconfig -l spn --client-id *** --client-secret *** --tenant-id 38b7fc89-dbe8-4ed1-a78b-39dfb6a217a8
2025-04-16T18:40:05.6999020Z 
2025-04-16T18:40:06.2255569Z ==============================================================================
2025-04-16T18:40:06.2256281Z 			Kubectl Client Version: v1.32.0
2025-04-16T18:40:06.2256691Z 			Kubectl Server Version: v1.31.5
2025-04-16T18:40:06.2256955Z ==============================================================================
2025-04-16T18:40:06.2641290Z [command]/usr/local/bin/kubectl apply -n eddv3-hbt -f /azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/sa.yaml -f /azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml -o json
2025-04-16T18:40:06.6903294Z Error from server (Forbidden): error when retrieving current configuration of:
2025-04-16T18:40:06.6903821Z Resource: "external-secrets.io/v1beta1, Resource=secretstores", GroupVersionKind: "external-secrets.io/v1beta1, Kind=SecretStore"
2025-04-16T18:40:06.6904317Z Name: "grafana-azure-kv", Namespace: "eddv3-hbt"
2025-04-16T18:40:06.6905029Z from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": secretstores.external-secrets.io "grafana-azure-kv" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "secretstores" in API group "external-secrets.io" in the namespace "eddv3-hbt"
2025-04-16T18:40:06.6905687Z Error from server (Forbidden): error when retrieving current configuration of:
2025-04-16T18:40:06.6906123Z Resource: "external-secrets.io/v1beta1, Resource=externalsecrets", GroupVersionKind: "external-secrets.io/v1beta1, Kind=ExternalSecret"
2025-04-16T18:40:06.6906873Z Name: "azure-monitor-secrets", Namespace: "eddv3-hbt"
2025-04-16T18:40:06.6907480Z from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": externalsecrets.external-secrets.io "azure-monitor-secrets" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "externalsecrets" in API group "external-secrets.io" in the namespace "eddv3-hbt"
2025-04-16T18:40:06.6927108Z 
2025-04-16T18:40:06.6982937Z ##[error]Error from server (Forbidden): error when retrieving current configuration of:
2025-04-16T18:40:06.6990402Z ##[error]Resource: "external-secrets.io/v1beta1, Resource=secretstores", GroupVersionKind: "external-secrets.io/v1beta1, Kind=SecretStore"
2025-04-16T18:40:06.6991427Z ##[error]Name: "grafana-azure-kv", Namespace: "eddv3-hbt"
2025-04-16T18:40:06.6992402Z ##[error]from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": secretstores.external-secrets.io "grafana-azure-kv" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "secretstores" in API group "external-secrets.io" in the namespace "eddv3-hbt"
2025-04-16T18:40:06.6993328Z ##[error]Error from server (Forbidden): error when retrieving current configuration of:
2025-04-16T18:40:06.6994136Z ##[error]Resource: "external-secrets.io/v1beta1, Resource=externalsecrets", GroupVersionKind: "external-secrets.io/v1beta1, Kind=ExternalSecret"
2025-04-16T18:40:06.6995065Z ##[error]Name: "azure-monitor-secrets", Namespace: "eddv3-hbt"
2025-04-16T18:40:06.6996419Z ##[error]from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": externalsecrets.external-secrets.io "azure-monitor-secrets" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "externalsecrets" in API group "external-secrets.io" in the namespace "eddv3-hbt"
2025-04-16T18:40:07.3848143Z ##[error]The process '/usr/local/bin/kubectl' failed with exit code 1
2025-04-16T18:40:07.3990677Z ##[section]Finishing: Create Secret SecretStore

Solution
========

It looks like you're encountering a Kubernetes permission error when trying to access resources related to the External Secrets Operator. Specifically, your user account doesn't have permission to interact with SecretStore resources from the external-secrets.io API group.
This permission error is happening even after you've installed External Secrets, which suggests that while your service principal had enough permissions to install the operator (creating CRDs), it doesn't have the necessary permissions to use the created custom resources.
To fix this issue, you'll need to:

Create a Role or ClusterRole that grants access to SecretStore resources:

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-user
rules:
- apiGroups: ["external-secrets.io"]
  resources: ["secretstores", "externalsecrets", "clustersecretstores"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-user-binding
subjects:
- kind: User
  name: "your-service-principal-object-id" # Replace with your actual SP object ID
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: external-secrets-user
  apiGroup: rbac.authorization.k8s.io

You can apply these via kubectl or incorporate them into your pipeline if you have cluster-admin permissions temporarily.
If you're continuing to face issues, you might need broader permissions. Consider asking your Azure administrator to grant the "Azure Kubernetes Service RBAC Cluster Admin" role to your service principal at the Azure RBAC level.


- task: AzureCLI@2
  displayName: 'Get AKS credentials with admin privileges'
  inputs:
    azureSubscription: 'Your-Azure-Subscription'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group $(resourceGroupName) --name $(clusterName) --admin --overwrite-existing

######


issue
######

secretstores.external-secrets.io "azure-kv" is forbidden: User "SP" cannot get resource "secretstores" in API group "external-secrets.io" in the namespace "comm-dev"

potential
=========

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-role
  namespace: comm-dev
rules:
- apiGroups: ["external-secrets.io"]
  resources: ["secretstores", "externalsecrets", "clustersecretstores"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# RoleBinding to bind the role to your service principal
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-rolebinding
  namespace: comm-dev
subjects:
- kind: ServiceAccount
  name: SP  # Replace with your service principal's service account name if different
  namespace: comm-dev
roleRef:
  kind: Role
  name: external-secrets-role
  apiGroup: rbac.authorization.k8s.io
########################
issue
################

Error from server (Forbidden): error when retrieving current configuration of:
Resource: "external-secrets.io/v1beta1, Resource=secretstores", GroupVersionKind: "external-secrets.io/v1beta1, Kind=SecretStore"
Name: "grafana-azure-kv", Namespace: "eddv3-hbt"
from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": secretstores.external-secrets.io "grafana-azure-kv" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "secretstores" in API group "external-secrets.io" in the namespace "eddv3-hbt": RBAC: clusterrole.rbac.authorization.k8s.io "external-secrets-user" not found
Error from server (Forbidden): error when retrieving current configuration of:
Resource: "external-secrets.io/v1beta1, Resource=externalsecrets", GroupVersionKind: "external-secrets.io/v1beta1, Kind=ExternalSecret"
Name: "azure-monitor-secrets", Namespace: "eddv3-hbt"
from server for: "/azp/agent/_work/67/s/devops/helm-charts/grafana-monitor/secretstore.yaml": externalsecrets.external-secrets.io "azure-monitor-secrets" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "externalsecrets" in API group "external-secrets.io" in the namespace "eddv3-hbt": RBAC: clusterrole.rbac.authorization.k8s.io "external-secrets-user" not found



########################
###################


/azp/agent/_work/_tool/helm/3.17.3/x64/linux-amd64/helm upgrade --namespace eddv3-hbt --install --wait --timeout 10m0s --create-namespace external-secrets external-secrets/external-secrets --version 0.9.0
Error: Unable to continue with install: could not get information about the resource CustomResourceDefinition "acraccesstokens.generators.external-secrets.io" in namespace "": customresourcedefinitions.apiextensions.k8s.io "acraccesstokens.generators.external-secrets.io" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "customresourcedefinitions" in API group "apiextensions.k8s.io" at the cluster scope
Release "external-secrets" does not exist. Installing it now.
##[error]Error: Unable to continue with install: could not get information about the resource CustomResourceDefinition "acraccesstokens.generators.external-secrets.io" in namespace "": customresourcedefinitions.apiextensions.k8s.io "acraccesstokens.generators.external-secrets.io" is forbidden: User "e524bd2f-9cc8-4a65-8a5c-d7407061fc82" cannot get resource "customresourcedefinitions" in API group "apiextensions.k8s.io" at the cluster scope

