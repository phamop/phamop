
service:
    telemetry:
      logs: 
        level: debug
    extensions:
      - health_check
    pipelines: 
      metrics:
        receivers: [otlp, prometheus]
        processors: [batch]
        exporters: [debug, prometheus]
      traces:
        receivers: [otlp, jaeger]
        processors: [batch]
        exporters: [debug, otlp]


##################################









# OpenTelemetry Collector Helm Values Configuration
# Deploy with: helm install otel-collector open-telemetry/opentelemetry-collector -f values.yaml

mode: "deployment"
nameOverride: "opentelemetry-collector"
fullnameOverride: "opentelemetry-collector"
replicaCount: 2

configMap:
  create: true
  existingName: ""

internalTelemetryViaOTLP:
  endpoint: ""
  headers: []
  traces:
    enabled: false
  metrics:
    enabled: false
  logs:
    enabled: false

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318
    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_http:
          endpoint: 0.0.0.0:14268
        thrift_compact:
          endpoint: 0.0.0.0:6831
    kubeletstats:
      insecure_skip_verify: true
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
              - targets:
                - 0.0.0.0:8888

  processors:
    batch: 
      timeout: 10s
      send_batch_size: 1000 
      send_batch_max_size: 5000
    transform:
      error_mode: ignore
      log_statements:
        - context: log
          statements: 
            - set(resource.attributes["service.name"], attributes["service_name"])
            - delete_key(attributes, "service_name")
    # Uncomment and configure memory limiter if needed
    # memory_limiter:
    #   check_interval: 5s
    #   limit_percentage: 80
    #   spike_limit_percentage: 25

  exporters:
    debug: 
      verbosity: basic
    otlphttp:
      endpoint: "http://loki-gateway.monitoring.svc.cluster.local:3100/loki/api/v1/push"
      tls:
        insecure: true
    prometheus:
      endpoint: "0.0.0.0:8889"
    otlp:
      endpoint: jaeger-collector:4317
      tls:
        insecure: true
    # Named OTLP exporter for Jaeger
    otlp/jaeger:
      endpoint: jaeger-collector:4317
      tls:
        insecure: true

  extensions:
    health_check:
      endpoint: 0.0.0.0:13133

  service:
    telemetry:
      logs: 
        level: debug
      metrics:
        readers:
          - pull:
              exporter:
                prometheus:
                  host: 0.0.0.0
                  port: 8888
    extensions:
      - health_check
    pipelines: 
      logs:
        receivers: [otlp]
        processors: [transform, batch]
        exporters: [debug, otlphttp]
      metrics:
        receivers: [otlp, prometheus]
        processors: [transform, batch]
        exporters: [debug, prometheus]
      traces:
        receivers: [otlp]
        processors: [batch]
        exporters: [debug, otlp/jaeger]

image:
  repository: "otel/opentelemetry-collector-contrib"
  pullPolicy: IfNotPresent
  tag: "0.123.0"

resources:
  requests:
    cpu: 500m
    memory: 800Mi
  limits:
    cpu: 1000m
    memory: 1600Mi

serviceAccount:
  create: true

ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    hostPort: 4317
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
  jaeger-compact:
    enabled: true
    containerPort: 6831
    protocol: UDP
  jaeger-thrift:
    enabled: true
    containerPort: 14268
  jaeger-grpc:
    enabled: true
    containerPort: 14250
  metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    hostPort: 8888
    protocol: TCP 
  prometheus:
    enabled: true
    containerPort: 8889
    servicePort: 8889
    hostPort: 8889
    protocol: TCP 

livenessProbe:
  httpGet:
    path: /
    port: 13133

readinessProbe:
  httpGet:
    path: /
    port: 13133
  initialDelaySeconds: 5
  periodSeconds: 10

useGOMEMLIMIT: true
