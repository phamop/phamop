# File: grafana-complete-values.yaml
# Complete configuration matching your Ingress spec and root URL requirements

global:
  imageRegistry: ""
  imagePullSecrets: []
  rbac:
    create: true

serviceAccount:
  create: false
  name: grafana-sa
  automountServiceAccountToken: true

ingress:
  enabled: false  # Disable Helm ingress creation - using existing ingress

service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
  portName: http
  sessionAffinity: None

image:
  repository: grafana/grafana
  tag: 9.5.3
  pullPolicy: IfNotPresent
  pullSecrets: []

securityContext:
  runAsNonRoot: true
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472
  fsGroupChangePolicy: "OnRootMismatch"

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

grafana.ini:
  server:
    root_url: "https://eddv-apim-cor-01.azure-api.net/homeowner-gateway-dv3/grafana"
    serve_from_sub_path: true
    enforce_domain: true
    domain: "eddv-apim-cor-01.azure-api.net"
    static_root_path: "public"
    enable_gzip: true
    router_logging: false
    cookie_samesite: "none"
    cookie_secure: true
    enable_embedding: true

  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning

  auth:
    disable_login_form: false
    disable_signout_menu: false
    proxy_enabled: true
    proxy_header_name: "X-WEBAUTH-USER"
    proxy_header_property: "username"
    proxy_whitelist: "10.0.0.0/8"

  auth.azuread:
    enabled: true
    name: "Azure AD"
    allow_sign_up: true
    client_id: "$AZUREAD_CLIENT_ID"
    client_secret: "$AZUREAD_CLIENT_SECRET"
    auth_url: "https://login.microsoftonline.com/$TENANT_ID/oauth2/v2.0/authorize"
    token_url: "https://login.microsoftonline.com/$TENANT_ID/oauth2/v2.0/token"
    scopes: "openid email profile"
    allowed_domains: "yourcompany.com"
    auto_login: false
    use_pkce: true

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Azure Monitor
      type: grafana-azure-monitor-datasource
      access: proxy
      jsonData:
        azureAuthType: clientsecret
        cloudName: azuremonitor
        tenantId: "$TENANT_ID"
        clientId: "$CLIENTID"
      secureJsonData:
        clientSecret: "$CLIENTSECRET"

plugins:
  - grafana-azure-monitor-datasource

resources:
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "500m"
    memory: "512Mi"

persistence:
  enabled: true
  type: pvc
  size: 10Gi
  accessModes: ["ReadWriteOnce"]
  finalizers: ["kubernetes.io/pvc-protection"]

env:
  GF_SERVER_DOMAIN: "eddv-apim-cor-01.azure-api.net"
  GF_SERVER_ROOT_URL: "https://eddv-apim-cor-01.azure-api.net/homeowner-gateway-dv3/grafana"
  GF_SERVER_SERVE_FROM_SUB_PATH: "true"
  GF_AUTH_PROXY_ENABLED: "true"

envFromSecret: "grafana-secrets"

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

## Required Secret Template (save as grafana-secrets.yaml)
# apiVersion: v1
# kind: Secret
# metadata:
#   name: grafana-secrets
#   namespace: eddv3-hbt
# type: Opaque
# stringData:
#   AZUREAD_CLIENT_ID: "<your-client-id>"
#   AZUREAD_CLIENT_SECRET: "<your-client-secret>"
#   TENANT_ID: "<your-tenant-id>"
#   CLIENTID: "<azure-monitor-client-id>"
#   CLIENTSECRET: "<azure-monitor-client-secret>"
