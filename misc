az ad sp list --filter "displayName eq 'Azure Monitor'" --query "[].{Name:displayName, ObjectId:objectId, AppId:appId}" --output table


az ad app list --query "[].{appId:appId, displayName:displayName}" -o table


# For a specific application (replace with your app name)
clientId=$(az ad app list --display-name "YourAppName" --query [].appId -o tsv)
echo "Client ID: $clientId"

# List all applications and their client IDs
az ad app list --query '[].{displayName:displayName, appId:appId}' -o table


# Assign Key Vault access to AKS cluster's managed identity
az keyvault set-policy --name Goodvault --object-id $(az aks show -g <resource-group> -n <aks-name> --query identity.principalId -o tsv) --secret-permissions get list

#########

# Get the principal ID of the AKS cluster's managed identity
AKS_RESOURCE_GROUP="your-aks-resource-group"
AKS_NAME="your-aks-cluster-name"

PRINCIPAL_ID=$(az aks show \
  --resource-group $AKS_RESOURCE_GROUP \
  --name $AKS_NAME \
  --query "identity.principalId" \
  --output tsv)

echo "Principal ID: $PRINCIPAL_ID"

###Grant the necessary permissions to the managed identity:

KEY_VAULT_NAME="Goodvault"
KEY_VAULT_RESOURCE_GROUP="your-keyvault-resource-group"

# Assign get and list permissions for secrets
az keyvault set-policy \
  --name $KEY_VAULT_NAME \
  --resource-group $KEY_VAULT_RESOURCE_GROUP \
  --object-id $PRINCIPAL_ID \
  --secret-permissions get list

### Confirm the policy was applied correctly:

az keyvault show \
  --name $KEY_VAULT_NAME \
  --resource-group $KEY_VAULT_RESOURCE_GROUP \
  --query "properties.accessPolicies[?objectId=='$PRINCIPAL_ID']"

