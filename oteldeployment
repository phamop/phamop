# Optimized OpenTelemetry Collector Configuration
mode: "deployment"

# Deployment-specific settings
replicaCount: 2

# Strategy for rolling updates
deploymentUpdateStrategy: RollingUpdate

presets:
  logsCollection:
    enabled: false  # Typically disabled for deployment mode
    includeCollectorLogs: false
    storeCheckpoints: false
    maxRecombineLogSize: 102400
  hostMetrics:
    enabled: false  # Not applicable for deployment mode
  kubernetesAttributes:
    enabled: true   # Useful for deployment mode
  kubeletMetrics:
    enabled: false  # Not applicable for deployment mode
  kubernetesEvents:
    enabled: true   # Can be useful for centralized collection
  clusterMetrics:
    enabled: true   # Deployment mode can collect cluster-wide metrics

configMap:
  create: true
  existingName: ""

internalTelemetryViaOTLP:
  endpoint: ""
  headers: []
  traces:
    enabled: false
  metrics:
    enabled: false
  logs:
    enabled: false

config:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317  # Listen on all interfaces for deployment
        http:
          endpoint: 0.0.0.0:4318
    jaeger:
      protocols:
        grpc:
          endpoint: 0.0.0.0:14250
        thrift_http:
          endpoint: 0.0.0.0:14268
        thrift_compact:
          endpoint: 0.0.0.0:6831
    zipkin:
      endpoint: 0.0.0.0:9411
    # Removed kubeletstats as it's not suitable for deployment mode
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
              - targets:
                - 0.0.0.0:8888

  processors:
    batch: {}
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25

  exporters:
    debug: {}
    azuremonitor:
      # endpoint: "https://dc.services.visualstudio.com/v2/track"
      connection_string: "InstrumentationKey=a04b4a5d-40f2-4508-885a-6ba32f28d17b;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/;ApplicationId=0cac2de8-d983-4211-8a7a-709d6363d032"

    otlphttp/loki:
      endpoint: "http://loki:3100/otlp"
    
    prometheus:
      endpoint: "0.0.0.0:8889"

  extensions:
    health_check:
      endpoint: 0.0.0.0:13133  # Listen on all interfaces

  service:
    telemetry:
      metrics:
        readers:
          - pull:
              exporter:
                prometheus:
                  host: 0.0.0.0  # Listen on all interfaces
                  port: 8888
    extensions:
      - health_check
    pipelines:
      logs:
        receivers:
          - otlp
        processors:
          - memory_limiter
          - batch
        exporters:
          - debug
          - azuremonitor
          - otlphttp/loki
      metrics:
        receivers:
          - otlp
          - prometheus
        processors:
          - memory_limiter
          - batch
        exporters:
          - debug
          - azuremonitor
          - prometheus
      traces:
        receivers:
          - otlp
          - jaeger
          - zipkin
        processors:
          - memory_limiter
          - batch
        exporters:
          - debug
          - azuremonitor


image:
  repository: "otel/opentelemetry-collector-contrib"
  pullPolicy: IfNotPresent
  tag: "0.123.0"

resources:
  requests:
    cpu: 500m
    memory: 800Mi
  limits:
    cpu: 2000m
    memory: 2000Mi

serviceAccount:
  create: true

# Service configuration for deployment
service:
  enabled: true
  type: ClusterIP
  
ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    # Removed hostPort - not applicable for deployment
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
  jaeger-compact:
    enabled: true
    containerPort: 6831
    servicePort: 6831
    protocol: UDP
  jaeger-thrift:
    enabled: true
    containerPort: 14268
    servicePort: 14268
  jaeger-grpc:
    enabled: true
    containerPort: 14250
    servicePort: 14250
  zipkin:
    enabled: true
    containerPort: 9411
    servicePort: 9411

# Health check configuration
livenessProbe:
  httpGet:
    path: /
    port: 13133
readinessProbe:
  httpGet:
    path: /
    port: 13133
  initialDelaySeconds: 5
  periodSeconds: 10

useGOMEMLIMIT: true

# Deployment-specific configurations
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1
